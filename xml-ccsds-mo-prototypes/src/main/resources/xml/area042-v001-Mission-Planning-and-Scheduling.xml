<?xml version="1.0" encoding="UTF-8"?>
<!--
  Based of MPS Information Model text Draft F (December 15th, 2020)
  and Service Specification Draft B4 (December 15th, 2020)
-->
<mal:specification
  xmlns:mal="http://www.ccsds.org/schema/ServiceSchema"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" comment="">
  <mal:area name="MPS" number="42" version="1" comment="">
    <mal:service name="PlanningRequest" number="1" comment="The Planning Request Service is offered by the planning function of an MPS system to enable its users to submit, cancel and modify planning requests, as well as to receive feedback on their status.&#10;The Planning Request Service may be used by another planning function in a hierarchical or distributed MPS system, or by an MPS system user.&#10;Planning Requests are defined in §3.2.5 and may include a set of requested Planning Activities or a reference to an existing Plan (the output of a Planning function in a hierarchical or distributed MPS system).">
      <mal:documentation name="High Level Requirements" order="1">
      </mal:documentation>
      <mal:capabilitySet number="1" comment="Submit Planning Request, obtain a list of Planning Request Summaries and retrieve Planning Request Status.">
        <!-- submitRequest -->
        <mal:requestIP name="submitRequest" number="1" supportInReplay="false" comment="Send planning request (as PlanningRequestDetails structure) to provider, with an optional userReference.&#10;The response returns the instanceID and version of the RequestInstance created (as an ObjectRef), together with the userReference.&#10;The status of the planning request is not returned. This can be obtained using the GetRequestStatus operation, or by subscribing to RequestStatusUpdates using the MonitorRequestStatus operation, if supported.&#10;In case of error, no planning request instance is created.">
          <mal:messages>
            <mal:request>
              <mal:field name="requestDetails" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="PlanningRequestDetails"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="requestResponse" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="PlanningRequestResponse"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- getRequestSummaries -->
        <mal:requestIP name="getRequestSummaries" number="2" supportInReplay="true" comment="Request a list of available planning requests, inputting a filter based on the following keys of the planning request:&#10;• domain (of request instanceID)&#10;• instanceID&#10;•	definitionID&#10;• userID&#10;•	userReference&#10;•	status&#10;• outputPlanRef&#10;Returns: list of available planning requests and their latest status, using the RequestSummaryStatus structure that comprises only header fields of the request.&#10;Note this is not an archive service, only planning requests currently being managed by the provider are returned.">
          <mal:messages>
            <mal:request>
              <mal:field name="requestFilter" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestFilter"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="requestSummaries" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestSummaryStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- getRequestStatus -->
        <mal:progressIP name="getRequestStatus" number="3" supportInReplay="true" comment="Obtain the current status of one or more planning requests, inputting a list of references to RequestInstances (instanceID and version).&#10;Returns: list of RequestStatusUpdates.">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="requestInstances" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateStatuses" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestStatusUpdate"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseStatuses" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestStatusUpdate"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="Cancel Planning Request.">
        <!-- cancelPlanningRequest -->
        <mal:submitIP name="cancelRequest" number="4" supportInReplay="false" comment="Send cancellation of planning request to provider.&#10;Submit the instanceID of the RequestInstance to be cancelled as an ObjectRef.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="instanceID" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3" comment="Update (modify) Planning Request.">
        <!-- updatePlanningRequest -->
        <mal:requestIP name="updateRequest" number="5" supportInReplay="false" comment="Send update of planning request to provider. A reference to the RequestInstance (ID/Version) to be updated is supplied, together with the updated  PlanningRequestDetails. It results in the creation of a new version of the PlanningRequestInstance.&#10;The response returns the instanceID and version of the revised RequestInstance created (as an ObjectRef), together with the userReference.&#10;In case of error, the error message contains the reason for failure.">
          <mal:messages>
            <mal:request>
              <mal:field name="requestInstance" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="requestDetails" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="PlanningRequestDetails"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="requestResponse" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="PlanningRequestResponse"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
            <mal:errorRef comment="The updateRequest operation failed to update the referenced RequestInstance.">
              <mal:type name="UPDATE_FAILED" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo provides additional information on the reason for failure as a free format string.">
                <mal:type list="false" name="String" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4" comment="Subscribe to Planning Request Status Updates.">
        <!-- monitorRequestStatus -->
        <mal:pubsubIP name="monitorRequestStatus" number="6" supportInReplay="true" comment="Subscribe to RequestStatusUpdates for a filtered set of planning request instances.&#10;Subscription filter is based on the following keys of the RequestInstance:&#10;•	domain (of request instanceID)&#10;•	instanceID&#10;•	definitionID &#10;•	userID&#10;•	userReference&#10;•	status&#10;•	outputPlanRef&#10;Notification Structure: RequestStatusUpdate.&#10;Consumers deregister to stop receiving RequestStatusUpdates.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="requestStatusUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestStatusUpdate"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5" comment="Retrieve Planning Requests.">
        <!-- getRequest -->
        <mal:progressIP name="getRequest" number="7" supportInReplay="true" comment="Retrieve one or more planning requests, inputting a list of references to RequestInstances (instanceID and version).&#10;Returns: list of RequestInstances.&#10;Note this is not an archive service, only planning requests currently being managed by the provider are returned.">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="requestIDs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateRequestInstances" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestInstance"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseRequestInstances" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestInstance"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="RequestDefinition" shortFormPart="1" comment="A RequestDefinition is an MO Object that contains the specification of a re-usable planning request template.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Definition ID -->
          <mal:field name="definitionID" canBeNull="false" comment="ID of the RequestDefinition.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Version -->
          <mal:field name="version" canBeNull="false" comment="Version of the RequestDefinition.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Description -->
          <mal:field name="description" canBeNull="false" comment="Description of the re-usable RequestDefinition.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Arg Defs -->
          <mal:field name="argDefs" canBeNull="true" comment="List of Argument Definitions. Arguments may be referenced in ActivityDetails and constraints.">
            <mal:type area="MPS" list="true" name="ArgDef"/>
          </mal:field>
          <!-- Standing Order -->
          <mal:field name="standingOrder" canBeNull="false" comment="A flag that indicates whether the planning request is for a repetitive standing order (unbounded other than by the validity period), or is a one-off request. If it is a standing order, then the ActivityNode must include specification of the repetition criteria. Note that a one-off request can still include repetition.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Constraints -->
          <mal:field name="constraints" canBeNull="true" comment="Set of Constraints applicable to the whole planning request. Note that constraints specific to a Planning Activity can be specified within the ActivityDetails for that activity within the ActivityNode.">
            <mal:type area="MPS" list="false" name="ConstraintNode"/>
          </mal:field>
          <!-- Activities -->
          <mal:field name="activities" canBeNull="false" comment="Set of Activity Details specifying requested activities, optionally with repetition.">
            <mal:type area="MPS" list="false" name="ActivityNode"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="RequestInstance" shortFormPart="2" comment="A RequestInstance is an MO Object that contains the specification of a planning request. This may change over time if the request is updated by the user, each comprising a separate version of the request with its own Object ID.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Instance ID -->
          <mal:field name="instanceID" canBeNull="false" comment="ID of the RequestInstance.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Version -->
          <mal:field name="version" canBeNull="false" comment="Version of the RequestInstance.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- User Reference -->
          <mal:field name="userReference" canBeNull="true" comment="Optional user supplied reference for the planning request. This is distinct from the instancetID of the RequestInstance that is assigned by the planning function.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Definition -->
          <mal:field name="definition" canBeNull="true" comment="Reference to the RequestDefinition from which the RequestInstance was created, if a planning request template was used.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Planning Period -->
          <mal:field name="planningPeriod" canBeNull="false" comment="Specifies which planning period the planning request applies to. Planning period IDs are mission specific, but can be used to indicate mission phase; planning cycle; or “semester” in observatory missions.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Validity Time -->
          <mal:field name="validityTime" canBeNull="true" comment="Validity period for the planning request, expressed as one or more time windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="TimeWindow"/>
          </mal:field>
          <!-- Validity Event -->
          <mal:field name="validityEvent" canBeNull="true" comment="Validity period for the planning request, expressed as one or more event windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="EventWindow"/>
          </mal:field>
          <!-- Time Reference -->
          <mal:field name="timeReference" canBeNull="true" comment="Specifies the Time reference used for all Time attributes within the planning request.&#10;If Null, default Time Reference for the system is used.">
            <mal:type area="MPS" list="false" name="TimeReferenceEnum"/>
          </mal:field>
          <!-- User -->
          <mal:field name="user" canBeNull="false" comment="The User ID for the person or organisation raising the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Description -->
          <mal:field name="description" canBeNull="false" comment="Description of the Request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Arguments -->
          <mal:field name="arguments" canBeNull="true" comment="List of named Argument values. If created from a template planning request, this will include the arguments defined in the RequestDefinition.">
            <mal:type area="MPS" list="true" name="Argument"/>
          </mal:field>
          <!-- Standing Order -->
          <mal:field name="standingOrder" canBeNull="false" comment="A flag that indicates whether the planning request is for a repetitive standing order (unbounded other than by the validity period), or is a one-off request. If it is a standing order, then the ActivityNode must include specification of the repetition criteria. Note that a one-off request can still include repetition.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Constraints -->
          <mal:field name="constraints" canBeNull="true" comment="Set of Constraints applicable to the whole planning request. Note that constraints specific to a Planning Activity can be specified within the ActivityDetails for that activity within the ActivityNode.">
            <mal:type area="MPS" list="false" name="ConstraintNode"/>
          </mal:field>
          <!-- Activities -->
          <mal:field name="activities" canBeNull="false" comment="Set of Activity Details specifying requested activities, optionally with repetition.">
            <mal:type area="MPS" list="false" name="ActivityNode"/>
          </mal:field>
          <!-- Input Plan Ref -->
          <mal:field name="inputPlanRef" canBeNull="true" comment="Optional. Reference to an existing Plan (output of one planning function) submitted as a planning request to another planning function in the context of a distributed or hierarchical planning system.&#10;Only one of inputPlanRef and inputPlan should be present within the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Input Plan -->
          <mal:field name="inputPlan" canBeNull="true" comment="Optional. An existing Plan (output of one planning function) submitted as a planning request to another planning function in the context of a distributed or hierarchical planning system. The plan is embedded within the planning request.&#10;Only one of inputPlanRef and inputPlan should be present within the planning request.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="Plan"/>
          </mal:field>
          <!-- Comments -->
          <mal:field name="comments" canBeNull="true" comment="Free text for any additional user comments about the request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current Status of the Activity Instance.">
            <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestStatusEnum"/>
          </mal:field>
          <!-- Output Plan Ref -->
          <mal:field name="outputPlanRef" canBeNull="true" comment="Optional. Reference to the output Plan that contains the activities resulting from the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for termination and is customisable, but includes:&#10;- Completed (all constituent activities completed successfully)&#10;- Expired (constituent activities expired prior to execution)&#10;- Failed (constituent activities failed during execution)&#10;- Deleted (constituent activities were deleted).">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Error Code -->
          <mal:field name="errCode" canBeNull="true" comment="Error Code relevant in the case of a failure status for the planning request.">
            <mal:type area="MAL" list="false" name="Integer"/>
          </mal:field>
          <!-- Error Info -->
          <mal:field name="errInfo" canBeNull="true" comment="Supplementary Error Information.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:enumeration name="RequestStatusEnum" shortFormPart="3" comment="">
          <mal:item nvalue="1" value="REQUESTED" comment="The Planning Request has been submitted to the Planning function."/>
          <mal:item nvalue="2" value="ACCEPTED" comment="The Planning Request has been accepted by the Planning function."/>
          <mal:item nvalue="3" value="REJECTED" comment="The Planning Request has been rejected by the Planning function."/>
          <mal:item nvalue="4" value="CANCELLED" comment="The Planning Request has been cancelled by the User."/>
          <mal:item nvalue="5" value="PLANNED" comment="The Planning Request has been incorporated into a Plan (see outputPlanRef)."/>
          <mal:item nvalue="6" value="ACTIVATED" comment="The corresponding Plan has been activated within PlanExecution."/>
          <mal:item nvalue="7" value="EXECUTING" comment="Execution of the first constituent Activity of the Planning Request has been initiated."/>
          <mal:item nvalue="8" value="TERMINATED" comment="Execution of all constituent Activities of the Planning Request have been terminated (further information is provided in terminationInfo)."/>
        </mal:enumeration>

        <mal:composite name="RequestStatusUpdate" shortFormPart="4" comment="RequestStatusUpdate is a data structure that is used to report changes in status of the RequestInstance as it proceeds through both planning and plan execution functions. Reporting is the responsibility of the planning function.&#10;Planning request status updates may be distributed to subscribing applications, including both Users and status displays, to inform them of the latest status of the planning request. This may be particularly relevant in conjunction with a Plan Execution function. Status updates may be stored in Planning Request History to provide a complete record of evolving status over time.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Request Instance -->
          <mal:field name="requestInstance" canBeNull="false" comment="Reference to the Planning Request Instance to which the status update relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Timestamp -->
          <mal:field name="timestamp" canBeNull="false" comment="Time of status update.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the planning request.">
            <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestStatusEnum"/>
          </mal:field>
          <!-- Output Plan Ref -->
          <mal:field name="outputPlanRef" canBeNull="true" comment="Reference to the Plan that contains the planned activities resulting from the planning request. Note that this is only available once the planning request has been processed and successfully planned. The outputPlanRef may be updated following iterative planning cycles or re-planning.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for termination and is customisable, but includes:&#10;- Completed (all constituent activities completed successfully)&#10;- Expired (constituent activities expired prior to execution)&#10;- Failed (constituent activities failed during execution)&#10;- Deleted (constituent activities were deleted).">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Error Code -->
          <mal:field name="errCode" canBeNull="true" comment="Error Code relevant in the case of a failure status for the planning request.">
            <mal:type area="MAL" list="false" name="Integer"/>
          </mal:field>
          <!-- Error Info -->
          <mal:field name="errInfo" canBeNull="true" comment="Supplementary Error Information.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanningRequestDetails" shortFormPart="5" comment="PlanningRequestDetails is a data structure used in the context of the MPS Planning Request service SubmitRequest and UpdateRequest operations, where the RequestInstance MO object cannot be used as the full identity of the resulting RequestInstance (ID and Version) is not yet known.&#10;Its structure is equivalent to that of RequestInstance, but omitting the identity attributes and dynamic attributes used to report its status.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- User Reference -->
          <mal:field name="userReference" canBeNull="false" comment="User supplied reference for the planning request. This is distinct from the instancetID of the RequestInstance that is assigned by the planning function.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Definition -->
          <mal:field name="definition" canBeNull="true" comment="Reference to the RequestDefinition from which the RequestInstance was created, if a planning request template was used.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Planning Period -->
          <mal:field name="planningPeriod" canBeNull="false" comment="Specifies which planning period the planning request applies to. Planning period IDs are mission specific, but can be used to indicate mission phase; planning cycle; or “semester” in observatory missions.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Validity Time -->
          <mal:field name="validityTime" canBeNull="true" comment="Validity period for the planning request, expressed as one or more time windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="TimeWindow"/>
          </mal:field>
          <!-- Validity Event -->
          <mal:field name="validityEvent" canBeNull="true" comment="Validity period for the planning request, expressed as one or more event windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="EventWindow"/>
          </mal:field>
          <!-- Time Reference -->
          <mal:field name="timeReference" canBeNull="true" comment="Specifies the Time reference used for all Time attributes within the planning request.&#10;If Null, default Time Reference for the system is used.">
            <mal:type area="MPS" list="false" name="TimeReferenceEnum"/>
          </mal:field>
          <!-- User -->
          <mal:field name="user" canBeNull="false" comment="The User ID for the person or organisation raising the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Description -->
          <mal:field name="description" canBeNull="false" comment="Description of the Request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Arguments -->
          <mal:field name="arguments" canBeNull="true" comment="List of named Argument values. If created from a template planning request, this will include the arguments defined in the RequestDefinition.">
            <mal:type area="MPS" list="true" name="Argument"/>
          </mal:field>
          <!-- Standing Order -->
          <mal:field name="standingOrder" canBeNull="false" comment="A flag that indicates whether the planning request is for a repetitive standing order (unbounded other than by the validity period), or is a one-off request. If it is a standing order, then the ActivityNode must include specification of the repetition criteria. Note that a one-off request can still include repetition.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Constraints -->
          <mal:field name="constraints" canBeNull="true" comment="Set of Constraints applicable to the whole planning request. Note that constraints specific to a Planning Activity can be specified within the ActivityDetails for that activity within the ActivityNode.">
            <mal:type area="MPS" list="false" name="ConstraintNode"/>
          </mal:field>
          <!-- Activities -->
          <mal:field name="activities" canBeNull="false" comment="Set of Activity Details specifying requested activities, optionally with repetition.">
            <mal:type area="MPS" list="false" name="ActivityNode"/>
          </mal:field>
          <!-- Input Plan Ref -->
          <mal:field name="inputPlanRef" canBeNull="true" comment="Optional. Reference to an existing Plan (output of one planning function) submitted as a planning request to another planning function in the context of a distributed or hierarchical planning system.&#10;Only one of inputPlanRef and inputPlan should be present within the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Input Plan -->
          <mal:field name="inputPlan" canBeNull="true" comment="Optional. An existing Plan (output of one planning function) submitted as a planning request to another planning function in the context of a distributed or hierarchical planning system. The plan is embedded within the planning request.&#10;Only one of inputPlanRef and inputPlan should be present within the planning request.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="Plan"/>
          </mal:field>
          <!-- Comments -->
          <mal:field name="comments" canBeNull="true" comment="Free text for any additional user comments about the request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanningRequestResponse" shortFormPart="6" comment="PlanningRequestResponse is a data structure used in the context of the MPS Planning Request service SubmitRequest and UpdateRequest operations, in response to the submitted PlanningRequestDetails defined above. It contains a reference to the created RequestInstance and the supplied userReference to allow the user to correlate the two.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Instance -->
          <mal:field name="instance" canBeNull="false" comment="Reference to the RequestInstance created in response to a SubmitRequest operation, or the updated version of the RequestInstance following an UpdateRequest operation.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- User Reference -->
          <mal:field name="userReference" canBeNull="false" comment="User supplied reference for the planning request. This is distinct from the instancetID of the RequestInstance that is assigned by the planning function.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="RequestSummaryStatus" shortFormPart="7" comment="RequestSummaryStatus is a data structure used in the context of the MPS Planning Request service getRequestSummaries operation, where a list of these structures is returned. It contains header fields of the planning request and its status, but not the request content (arguments, activities and constraints).">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Request Instance -->
          <mal:field name="requestInstance" canBeNull="false" comment="Reference to the RequestInstance (ID and Version).">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- User Reference -->
          <mal:field name="userReference" canBeNull="true" comment="Optional user supplied reference for the planning request. This is distinct from the instancetID of the RequestInstance that is assigned by the planning function.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Definition -->
          <mal:field name="definition" canBeNull="true" comment="Reference to the RequestDefinition from which the RequestInstance was created, if a planning request template was used.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Planning Period -->
          <mal:field name="planningPeriod" canBeNull="false" comment="Specifies which planning period the planning request applies to. Planning period IDs are mission specific, but can be used to indicate mission phase; planning cycle; or “semester” in observatory missions.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Validity Time -->
          <mal:field name="validityTime" canBeNull="true" comment="Validity period for the planning request, expressed as one or more time windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="TimeWindow"/>
          </mal:field>
          <!-- Validity Event -->
          <mal:field name="validityEvent" canBeNull="true" comment="Validity period for the planning request, expressed as one or more event windows. The planning request must be satisfied within this period.&#10;Only one of validityTime or validityEvent should be present in a planning request.">
            <mal:type area="MPS" list="true" name="EventWindow"/>
          </mal:field>
          <!-- User -->
          <mal:field name="user" canBeNull="false" comment="The User ID for the person or organisation raising the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Description -->
          <mal:field name="description" canBeNull="false" comment="Description of the Request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Standing Order -->
          <mal:field name="standingOrder" canBeNull="false" comment="A flag that indicates whether the planning request is for a repetitive standing order (unbounded other than by the validity period), or is a one-off request. If it is a standing order, then the ActivityNode must include specification of the repetition criteria. Note that a one-off request can still include repetition.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Comments -->
          <mal:field name="comments" canBeNull="true" comment="Free text for any additional user comments about the request.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current Status of the Activity Instance.">
            <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestStatusEnum"/>
          </mal:field>
          <!-- Output Plan Ref -->
          <mal:field name="outputPlanRef" canBeNull="true" comment="Optional. Reference to the output Plan that contains the activities resulting from the planning request.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for termination and is customisable, but includes:&#10;- Completed (all constituent activities completed successfully)&#10;- Expired (constituent activities expired prior to execution)&#10;- Failed (constituent activities failed during execution)&#10;- Deleted (constituent activities were deleted).">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="RequestFilter" shortFormPart="8" comment="RequestFilter is a data structure used in the context of MPS Planning Request Service operations to specify a filtered set of Planning Requests.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Domain -->
          <mal:field name="domain" canBeNull="true" comment="Domain of the RequestInstance.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Instance ID -->
          <mal:field name="instanceID" canBeNull="true" comment="InstanceID (and Version) of the RequestInstance.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Definition ID -->
          <mal:field name="definitionID" canBeNull="true" comment="DefinitionID (and Version) of the RequestInstance (the RequestDefinition from which it was created).">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- User ID -->
          <mal:field name="userID" canBeNull="true" comment="UserID of the User who initiated the RequestInstance.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- User Reference -->
          <mal:field name="userReference" canBeNull="true" comment="Reference supplied by User when submitting the RequestInstance.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="true" comment="Current status (enum) of the RequestInstance.">
            <mal:type area="MPS" service="PlanningRequest" list="false" name="RequestStatusEnum"/>
          </mal:field>
          <!-- Output Plan Ref -->
          <mal:field name="outputPlanRef" canBeNull="true" comment="Reference to the output Plan generated in response to the RequestInstance.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
    </mal:service>

    <mal:service name="PlanDistribution" number="2" comment="The Plan Distribution Service is offered by the planning function of an MPS system to enable its users to obtain the Plans output by it, as well as to receive feedback on their status.&#10;The Plan Distribution Service may be used by another planning function in a hierarchical or distributed MPS system, or by an MPS system user. Submission of Plans to a plan execution function is supported by the Plan Execution Control Service.">
      <mal:documentation name="High Level Requirements" order="1">
      </mal:documentation>
      <mal:capabilitySet number="1" comment="List available Plans and their latest status, obtain specified Plans or their latest status.">
        <!-- getPlanSummaries -->
        <mal:requestIP name="getPlanSummaries" number="1" supportInReplay="true" comment="Request a list of available Plans, inputting a filter based on the following keys of the Plan:&#10;•	domain (of planID)&#10;•	planID (and version)&#10;•	precursorPlan&#10;•	status&#10;•	originator&#10;•	validity period as a time range&#10;Returns:  list of available Plans and their latest status, using the PlanSummaryStatus structure that comprises only the header fields and PlanInformation part of the Plan.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="planFilter" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanFilter"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="planSummaries" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanSummaryStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- getPlan -->
        <mal:progressIP name="getPlan" number="2" supportInReplay="true" comment="Retrieve one or more Plans, inputting a list of references to Plans (planID and version) as ObjectRefs. If no version is specified, then the latest is assumed.&#10;Returns: list of Plans.">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updatePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="Plan"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responsePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="Plan"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
        <!-- getPlanStatus -->
        <mal:progressIP name="getPlanStatus" number="3" supportInReplay="true" comment="Retrieve the status of one or more Plans, inputting a list of references to Plans (planID and version) as ObjectRefs, if no version is specified, then the latest is assumed.&#10;Returns: list of PlanSummaryStatus structures.">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updatePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanSummaryStatus"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responsePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanSummaryStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="Subscribe to updates in Plan status.">
        <!-- monitorPlanStatus -->
        <mal:pubsubIP name="monitorPlanStatus" number="4" supportInReplay="true" comment="Subscribe to PlanUpdates that report changes in Plan status for a filtered set of Plans.&#10;Subscription filter is based on the following keys of the Plan:&#10;•	domain (of PlanID)&#10;•	planID (and version)&#10;•	precursorPlan &#10;•	status&#10;•	originator&#10;•	validityPeriod as a time range&#10;Notification Structure: PlanUpdate.&#10;Consumers deregister to stop receiving PlanUpdates.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="planUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanUpdate"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3" comment="Subscribe to receive new Plans.">
        <!-- monitorPlan -->
        <mal:pubsubIP name="monitorPlan" number="5" supportInReplay="false" comment="Subscribe to a filtered set of Plans, receiving the full content of the Plan when published by the Provider. The Provider forwards new versions of Plans to all registered Consumers.&#10;Subscription filter is based on the following keys of the Plan:&#10;•	domain (of PlanID)&#10;•	planID (and version)&#10;•	precursorPlan&#10;•	status&#10;•	originator&#10;•	validityPeriod as a time range&#10;Consumers deregister to stop receiving Plans.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="Plan"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4" comment="Query to retrieve filtered set of Plans.">
        <!-- queryPlan -->
        <mal:progressIP name="queryPlan" number="6" supportInReplay="false" comment="Query for retrieving a filtered set of Plans, based on input of the following aspects of the Plan:&#10;•	planID&#10;•	planInformation&#10;•	event type [definition] of contained EventInstances&#10;•	activity type [definition] of contained ActivityInstances&#10;The query criteria are specified using the PlanQuery data structure as input.&#10;Returns: list of Plans.">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="query" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanQuery"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updatePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="Plan"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responsePlans" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="Plan"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5" comment="Retrieve a partial Plan, based on specified criteria.">
        <!-- getPartialPlan -->
        <mal:requestIP name="getPartialPlan" number="7" supportInReplay="false" comment="Retrieve a partial plan, based on the following input criteria:&#10;•	planID and version for a single specified Plan&#10;•	domain&#10;•	subPlan&#10;•	tags&#10;•	partialPlanStart as Trigger&#10;•	PartialPlanEnd as Trigger&#10;Triggers may be used to specify a portion of the plan based on Time, Event or Position windows.&#10;Returns: a partial Plan conforming to the structure of a Plan.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="planID" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="domain" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="subPlan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="tags" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="String"/>
              </mal:field>
              <mal:field name="partialPlanStart" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="Trigger"/>
              </mal:field>
              <mal:field name="partialPlanEnd" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="Trigger"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="partialPlan" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PartialPlan"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:dataTypes>
        <mal:composite name="Plan" shortFormPart="1" comment="A Plan is an MO Object that contains both the static attributes that define a version of a Plan and dynamic attributes that hold its current state. Its identity is defined by a constant planID and an evolving version, which is updated each time the plan is revised.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan ID -->
          <mal:field name="planID" canBeNull="false" comment="ID of the Plan.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Instance Version -->
          <mal:field name="version" canBeNull="false" comment="Version of the Plan.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Has Precursor -->
          <mal:field name="hasPrecursor" canBeNull="false" comment="Flag indicating if the plan has a predecessor Plan from which the changes are detailed in Plan. This may be used if there is an iterative re-planning cycle in which successive plans overlap, or where a previous plan has been updated through re-planning. If there is no predecessor, then the Plan must be a self-standing Full Plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Is Patch Plan -->
          <mal:field name="isPatchPlan" canBeNull="false" comment="Flag indicating if the plan is a Patch Plan that only contains details of the changes from the predecessor Plan. A Patch Plan must have a predecessor and the hasPrecursor flag must be set to True. It must also include a single PlanRevision relative to the predecessor Plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Precursor Plan -->
          <mal:field name="precursorPlan" canBeNull="true" comment="Reference to the predecessor Plan, nullable only if the hasPrecursor flag is set to False.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Target Plan -->
          <mal:field name="targetPlan" canBeNull="true" comment="Applicable only for Patch Plans, this is a reference to the target Plan. This target Plan is the result of applying the PatchPlan to the predecessor Plan and is distinct from the identity of the PatchPlan itself. For a Patch Plan used in the context of a planning request, this is set to null.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Plan Information -->
          <mal:field name="information" canBeNull="false" comment="Contains header information relating to the Plan, including its originator and validity period.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanInformation"/>
          </mal:field>
          <!-- Planned Items -->
          <mal:field name="items" canBeNull="false" comment="Contains the planned activities and events that constitute the plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlannedItems"/>
          </mal:field>
          <!-- Plan Revisions -->
          <mal:field name="revisions" canBeNull="true" comment="Details the changes between this Plan and other Plans (or other versions of the same Plan), usually the predecessor Plan. Optional, but must be present in a Patch Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanRevisions"/>
          </mal:field>
          <!-- Plan Resources -->
          <mal:field name="resources" canBeNull="true" comment="Optional. Contains resource profiles for planning resources covering the period of the plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanResources"/>
          </mal:field>
          <!-- Is alternate -->
          <mal:field name="isAlternate" canBeNull="false" comment="Flag indicating if the Plan has currently been released as an Operational or Alternate plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="Supplementary information for a plan in the Terminated state. This is customisable, but includes:&#10;- Completed (nominal)&#10;- Superseded (by a successor Plan)&#10;- Revoked&#10;- Expired.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanInformation" shortFormPart="2" comment="The Plan Information section of a Plan contains administrative and validity details associated with the plan as a whole.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Originator -->
          <mal:field name="originator" canBeNull="false" comment="Identity of the entity or system responsible for the production of the Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Production Date -->
          <mal:field name="productionDate" canBeNull="false" comment="Date and time of production of the Plan.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Description -->
          <mal:field name="description" canBeNull="false" comment="Description of the Plan.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Comments -->
          <mal:field name="comments" canBeNull="true" comment="Field for additional comments or notes to the operations team regarding the plan.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
          <!-- Validity Start -->
          <mal:field name="validityStart" canBeNull="false" comment="Start of validity period for the Plan.&#10;The validity period defines when the Plan is available for operational use. It cannot be used outside its validity period.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Validity End -->
          <mal:field name="validityEnd" canBeNull="false" comment="End of validity period for the Plan.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Plan Period Start -->
          <mal:field name="planPeriodStart" canBeNull="false" comment="Start of the plan period.&#10;The plan period defines the start and end points of the plan. Planned items (planning activities and events) contained within the plan must at least partially overlap the plan period. The use of the trigger structure allows this to be specified in terms of Time, Position, Pointing or Planning Events. Examples are:&#10;- a specified period of time&#10;- an orbital repeat cycle&#10;- a period between two events.">
            <mal:type area="MPS" list="false" name="Trigger"/>
          </mal:field>
          <!-- Plan Period End -->
          <mal:field name="planPeriodEnd" canBeNull="false" comment="End of the plan period.">
            <mal:type area="MPS" list="false" name="Trigger"/>
          </mal:field>
          <!-- Time Reference -->
          <mal:field name="timeReference" canBeNull="true" comment="Specifies the Time reference used for all Time attributes within the plan.&#10;If Null, default Time Reference for the system is used.">
            <mal:type area="MPS" list="false" name="TimeReferenceEnum"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlannedItems" shortFormPart="3" comment="The PlannedItems section of the Plan specifies the set of planning activities and planning events contained within the plan. It comprises two lists of contained MO objects:  one of EventInstances and one of ActivityInstances. Both lists can be empty.&#10;If the Plan is a Full Plan, then there must be an entry in the list for all planned items contained within the plan, whether changed or not. If the PlanVersion is a Patch Plan, then there is only an entry in the list for those planned items that have changed (new or modified).">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Planned Events -->
          <mal:field name="plannedEvents" canBeNull="true" comment="List of Planned Events contained within the Plan.">
            <mal:type area="MPS" list="true" name="EventInstance"/>
          </mal:field>
          <!-- Planned Activities -->
          <mal:field name="plannedActivities" canBeNull="true" comment="List of Planned Activities contained within the Plan.">
            <mal:type area="MPS" list="true" name="ActivityInstance"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanRevisions" shortFormPart="4" comment="The optional PlanRevisions section details the changes between this Plan and another Plan. PlanRevisions comprise a collection of PlanRevision structures, each of which details the changes with respect to one version of a Plan (the revised plan).&#10;In the typical case, there is only one PlanRevision corresponding to the changes between the Plan and its predecessor. However, it is possible to include multiple PlanRevision structures documenting the differences with any other version of a Plan. This can be used to provide a change history for successive versions of the same Plan, or to document the differences between alternate Plans.&#10;In the case of a Patch Plan, the Plan must include a single PlanRevision relative to the predecessor Plan.&#10;Each PlanRevision comprises an ordered set of ItemRevisions that document the change to individual planned items (planning events and activities). The order should be from earliest to latest within the plan period. Each ItemRevision references an individual EventInstance or ActivityInstance and indicates whether the planned item is new, modified or deleted in the current plan. New or modified items must also exist within the PlannedItems section of the Plan, but deleted items are not contained within the current Plan. Note that unmodified items do not appear in the PlanRevision.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan Revisions -->
          <mal:field name="planRevisions" canBeNull="false" comment="Set of PlanRevision structures, each detailing the change with respect to an identified Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanRevision"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanRevision" shortFormPart="5" comment="">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Revised Plan -->
          <mal:field name="revisedPlan" canBeNull="false" comment="Reference to the Plan (ID and version) with respect to which the plan revisions are detailed. Typically this is the predecessor plan, but any other Plan can be used.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Revision Start -->
          <mal:field name="revisionStart" canBeNull="false" comment="Start time of the earliest revision.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Revision End -->
          <mal:field name="revisionEnd" canBeNull="false" comment="End time of the latest revision.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Item Revisions -->
          <mal:field name="itemRevisions" canBeNull="true" comment="Ordered list (earliest to latest) of revisions to planned items (activity and event instances).">
            <mal:type area="MPS" service="PlanDistribution" list="true" name="ItemRevision"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="ItemRevision" shortFormPart="6" comment="">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Item Ref -->
          <mal:field name="itemRef" canBeNull="false" comment="Reference to a planned ActivityInstance or EventInstance that is new or modified in the current Plan, or has been deleted with respect to the referenced revisedPlan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Revision Status -->
          <mal:field name="revisionStatus" canBeNull="false" comment="Revision status of the referenced item. May be one of New, Modified or Deleted. Default = Undefined.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="RevisionStatusEnum"/>
          </mal:field>
        </mal:composite>

        <mal:enumeration name="RevisionStatusEnum" shortFormPart="7" comment="">
          <mal:item nvalue="1" value="NEW" comment="The item is new in this revision of the Plan."/>
          <mal:item nvalue="2" value="MODIFIED" comment="The item has been modified in this revision of the Plan."/>
          <mal:item nvalue="3" value="DELETED" comment="The item has been deleted in this revision of the Plan."/>
          <mal:item nvalue="4" value="UNDEFINED" comment="The item is unchanged in this revision of the Plan, or its revision status is undefined."/>
        </mal:enumeration>

        <mal:composite name="PlanResources" shortFormPart="8" comment="The optional PlanResources section allows the projected values of Planning Resources to be communicated between distributed planning and plan execution functions as part of a Plan.&#10;This is provided as a set of ResourceProfiles, one per Planning Resource included. Resource profiles can provide the projected evolution of the value of a planning resource over the period of the plan. Alternatively it can provide a single value at the start of the plan to enable synchronisation between planning systems. It is a deployment choice which approach is used.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Resource Profiles -->
          <mal:field name="resourceProfiles" canBeNull="false" comment="Set of resource profiles, one per planning resource, containing the initial value of the resource and optionally the projected evolution of the resource value over the period of the plan.">
            <mal:type area="MPS" list="true" name="ResourceProfile"/>
          </mal:field>
        </mal:composite>

        <mal:enumeration name="PlanStatusEnum" shortFormPart="9" comment="">
          <mal:item nvalue="1" value="DRAFT" comment="The Plan has been saved by the Planning function."/>
          <mal:item nvalue="2" value="RELEASED" comment="The Plan has been released for operational use by the Planning function."/>
          <mal:item nvalue="3" value="SUBMITTED" comment="The Plan has been submitted to the Plan Execution function and is available for use, but will not execute until activated."/>
          <mal:item nvalue="4" value="ACTIVATED" comment="The Plan has been activated by the Plan Execution function."/>
          <mal:item nvalue="5" value="TERMINATED" comment="The Plan has reached a terminal state, as detailed in the terminationInfo. This includes the following cases:&#10;- Completed (nominal)&#10;- Superseded by a successor PlanVersion&#10;- Revoked by a user&#10;- Expired (reached the end of its validity period without being activated)."/>
        </mal:enumeration>

        <mal:composite name="PlanUpdate" shortFormPart="10" comment="PlanUpdate is a data structure that is used to report changes in status of the Plan as it proceeds through both planning and plan execution functions. It is returned in the context of the MPS Plan Distribution service MonitorPlanStatus operation, and also the MPS Plan Execution Control service MonitorPlanExecution and GetPlanStatus operations.&#10;PlanUpdates may be distributed to subscribing applications, including status displays, to inform them of the latest status of a Plan. PlanUpdates may be stored in Plan History to provide a complete record of evolving status over time.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan -->
          <mal:field name="plan" canBeNull="false" comment="Reference to the Plan (ID and version) to which the status update relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Timestamp -->
          <mal:field name="timestamp" canBeNull="false" comment="Time of status update.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Is alternate -->
          <mal:field name="isAlternate" canBeNull="false" comment="Flag indicating if the Plan has currently been released as an Operational or Alternate plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="Supplementary information for a plan in the Terminated state. This is customisable, but includes:&#10;- Completed (nominal)&#10;- Superseded (by a successor Plan)&#10;- Revoked&#10;- Expired.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanSummaryStatus" shortFormPart="11" comment="PlanSummaryStatus is a data structure that provides an summary view of a Plan that includes the PlanInformation section and current status, but not the full details of the plan. It is returned in the context of the MPS Plan Distribution service GetPlanStatus operation.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan -->
          <mal:field name="plan" canBeNull="false" comment="Reference to the Plan (ID and version) to which the Summary Status relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Has Precursor -->
          <mal:field name="hasPrecursor" canBeNull="false" comment="Flag indicating if the plan has a predecessor Plan from which the changes are detailed in Plan. This may be used if there is an iterative re-planning cycle in which successive plans overlap, or where a previous plan has been updated through re-planning. If there is no predecessor, then the Plan must be a self-standing Full Plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Is Patch Plan -->
          <mal:field name="isPatchPlan" canBeNull="false" comment="Flag indicating if the plan is a Patch Plan that only contains details of the changes from the predecessor Plan. A Patch Plan must have a predecessor and the hasPrecursor flag must be set to True. It must also include a single PlanRevision relative to the predecessor Plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Precursor Plan -->
          <mal:field name="precursorPlan" canBeNull="true" comment="Reference to the predecessor Plan, nullable only if the hasPrecursor flag is set to False.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Target Plan -->
          <mal:field name="targetPlan" canBeNull="true" comment="Applicable only for Patch Plans, this is a reference to the target Plan. This target Plan is the result of applying the PatchPlan to the predecessor Plan and is distinct from the identity of the PatchPlan itself. For a Patch Plan used in the context of a planning request, this is set to null.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Plan Information -->
          <mal:field name="information" canBeNull="false" comment="Contains header information relating to the Plan, including its originator and validity period.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanInformation"/>
          </mal:field>
          <!-- Is alternate -->
          <mal:field name="isAlternate" canBeNull="false" comment="Flag indicating if the Plan has currently been released as an Operational or Alternate plan.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Termination Info -->
          <mal:field name="terminationInfo" canBeNull="true" comment="Supplementary information for a plan in the Terminated state.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanActivationStatus" shortFormPart="12" comment="PlanActivationStatus is a data structure that returns the activation status of a Plan in the context of the MPS Plan Execution Control service ActivatePlan and DeactivatePlan operations.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan -->
          <mal:field name="plan" canBeNull="false" comment="Reference to the Plan (ID and version) to which the status relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Activation Info -->
          <mal:field name="activationInfo" canBeNull="false" comment="ActivationInfo provides customisable detailed information on the result of the activation/deactivation request for the referenced Plan.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="SubPlanUpdate" shortFormPart="13" comment="SubPlanUpdate is a data structure that is used to report changes in status of a SubPlan during Plan Execution. It is returned in the context of the MPS Plan Execution Control service MonitorSubPlanExecution and GetSubPlanStatus operations.&#10;Sub-plans are not defined as objects within the MPS model. Individual activities within a Plan may be associated with a single sub-plan via its Identifier. The Plan Execution function is responsible for managing and reporting sub-plan status associated with relevant Plan Execution Control service operations, if supported.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Sub-Plan -->
          <mal:field name="subPlan" canBeNull="false" comment="Identifier of the SubPlan to which the update relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Timestamp -->
          <mal:field name="timestamp" canBeNull="false" comment="Time of status update.">
            <mal:type area="MAL" list="false" name="Time"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the SubPlan, which may be Activated or Deactivated.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
        </mal:composite>

        <mal:enumeration name="SubPlanStatusEnum" shortFormPart="14" comment="">
          <mal:item nvalue="1" value="ACTIVATED" comment="The SubPlan is active."/>
          <mal:item nvalue="2" value="DEACTIVATED" comment="The SubPlan is not active."/>
        </mal:enumeration>

        <mal:composite name="SubPlanActivationStatus" shortFormPart="15" comment="SubPlanActivationStatus is a data structure that returns the activation status of a SubPlan in the context of the MPS Plan Execution Control service ActivateSubPlan and DeactivateSubPlan operations.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan -->
          <mal:field name="plan" canBeNull="false" comment="Identifier of the SubPlan to which the status relates.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="false" comment="Current status of the SubPlan, which may be Activated or Deactivated.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="SubPlanStatusEnum"/>
          </mal:field>
          <!-- Activation Info -->
          <mal:field name="terminationInfo" canBeNull="false" comment="ActivationInfo provides customisable detailed information on the result of the activation/deactivation request for the referenced SubPlan.">
            <mal:type area="MAL" list="false" name="String"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanQuery" shortFormPart="16" comment="PlanQuery is a data structure used in the context of queryPlan operation of the MPS Plan Distribution Service. It is used to specify search criteria for querying the available set of Plans. All fields are nullable, in which case they do not apply as a search criteria.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Plan ID -->
          <mal:field name="planID" canBeNull="true" comment="Query for Plans with the specified PlanID.">
            <mal:type area="MAL" list="false" name="ULong"/>
          </mal:field>
          <!-- Has Precursor -->
          <mal:field name="hasPrecursor" canBeNull="true" comment="Query for Plans with or without a precursor.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Is Patch Plan -->
          <mal:field name="isPatchPlan" canBeNull="true" comment="Query for Plans that are or are not Patch Plans.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Precursor Plan -->
          <mal:field name="precursorPlan" canBeNull="true" comment="Query for Plans with the specified precursor Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Target Plan -->
          <mal:field name="targetPlan" canBeNull="true" comment="Applicable only for Patch Plans. Query for Patch Plans that have the specified target Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Originator -->
          <mal:field name="originator" canBeNull="true" comment="Query for Plans with the specified originator.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Production Date -->
          <mal:field name="productionDate" canBeNull="true" comment="Query for Plans with a production date in the specified range.">
            <mal:type area="MPS" list="false" name="TimeWindow"/>
          </mal:field>
          <!-- Validity Period -->
          <mal:field name="validityPeriod" canBeNull="true" comment="Query for Plans with a validity period within (overlapping with) the specified range.">
            <mal:type area="MPS" list="false" name="TimeWindow"/>
          </mal:field>
          <!-- Is alternate -->
          <mal:field name="isAlternate" canBeNull="true" comment="Query for Plans that are or are not Alternate plans.">
            <mal:type area="MAL" list="false" name="Boolean"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="true" comment="Query for Plans that have a current status matching one of the specified list of Plan statuses.">
            <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Contained Events -->
          <mal:field name="containedEvents" canBeNull="true" comment="Query for Plans that contain EventInstances whose definition matches one of the specified list of EventDefinitions.">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
          <!-- Contained Activities -->
          <mal:field name="containedActivities" canBeNull="true" comment="Query for Plans that contain ActivityInstances whose definition matches one of the specified list of ActivityDefinitions.">
            <mal:type area="MAL" list="true" name="Identifier"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PartialPlan" shortFormPart="17" comment="A PartialPlan is a data structure returned from the getPartialPlan operation of the Plan Distribution Service that contains a reference to the source Plan, the criteria used to select the partial plan, and the partial plan itself. The partial plan uses the same structure as a normal Plan, with header fields matching those of the SourcePlan, but only containing the subset of ActivityInstances that matches the selection criteria. Whether EventInstances and Resources are included is implementation specific, but it might be assumed that any Events and Resources related to the selected ActivityInstances would be included in the returned partial plan.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Source Plan -->
          <mal:field name="sourcePlan" canBeNull="false" comment="Reference to the Plan of which the partial plan is a selected subset.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Domain -->
          <mal:field name="domain" canBeNull="true" comment="Selection criterion based on the domain of contained ActivityInstances.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Sub-plan -->
          <mal:field name="subPlan" canBeNull="true" comment="Selection criterion based on the subPlan of contained ActivityInstances.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Tags -->
          <mal:field name="tags" canBeNull="true" comment="Selection criterion based on tags associated with contained ActivityInstances">
            <mal:type area="MAL" list="true" name="String"/>
          </mal:field>
          <!-- Partial Plan Start -->
          <mal:field name="partialPlanStart" canBeNull="true" comment="Selection criterion indicating the start of a range of time, position or events associated with contained ActivityInstances.">
            <mal:type area="MPS" list="false" name="Trigger"/>
          </mal:field>
          <!-- Partial Plan End -->
          <mal:field name="partialPlanEnd" canBeNull="true" comment="Selection criterion indicating the end of a range of time, position or events associated with contained ActivityInstances.">
            <mal:type area="MPS" list="false" name="Trigger"/>
          </mal:field>
          <!-- Partial Plan -->
          <mal:field name="partialPlan" canBeNull="false" comment="The returned Partial Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="Plan"/>
          </mal:field>
        </mal:composite>

        <mal:composite name="PlanFilter" shortFormPart="18" comment="PlanFilter is a data structure used in the context of MPS Plan Distribution Service operations to specify a filtered set of Plans.">
          <mal:extends>
            <mal:type area="MAL" list="false" name="Composite"/>
          </mal:extends>
          <!-- Domain -->
          <mal:field name="domain" canBeNull="true" comment="Domain of the Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Plan ID -->
          <mal:field name="planID" canBeNull="true" comment="ID (and Version) of the Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Precursor Plan -->
          <mal:field name="precursorPlan" canBeNull="true" comment="ID (and Version) of the precursor Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Status -->
          <mal:field name="status" canBeNull="true" comment="Current status (enum) of the Plan.">
            <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
          </mal:field>
          <!-- Originator -->
          <mal:field name="originator" canBeNull="true" comment="Originator of the Plan.">
            <mal:type area="MAL" list="false" name="Identifier"/>
          </mal:field>
          <!-- Validity Period -->
          <mal:field name="validityPeriod" canBeNull="true" comment="Period of time with which the validity period of the Plan overlaps.">
            <mal:type area="MPS" list="false" name="TimeWindow"/>
          </mal:field>
        </mal:composite>
      </mal:dataTypes>
    </mal:service>

    <mal:service name="PlanExecutionControl" number="3" comment="The Plan Execution Control Service is offered by an MPS system’s plan execution function to enable its users to submit (and revoke) Plans for execution; to control their execution at Plan, Sub-Plan and Activity levels; and to receive feedback on their execution status.&#10;The Plan Execution Control Service may be used by a planning function, or by an MPS system user responsible for mission operations.&#10;Plans are defined in §3.2.6, including the state model for Plans to which the operations of the service correlate.&#10;Sub-plans are not defined as an MO Object in the MPS Information Model, but are specified by an Identifier associated with the constituent ActivityInstances contained in a Plan. This can be used to sub-divide a Plan based on domain (spacecraft or subsystem), operational responsibility, or another criterion. Each ActivityInstance can only be associated with a single Sub-plan. Control may be exercised via the service at the level of sub-plans.">
      <mal:documentation name="High Level Requirements" order="1">
      </mal:documentation>
      <mal:capabilitySet number="1" comment="Submit Plan for execution; revoke Plan previously submitted; and retrieve execution status of Plans.">
        <!-- submitPlan -->
        <mal:submitIP name="submitPlan" number="1" supportInReplay="false" comment="Send a Plan to a plan execution function, making it available for execution.&#10;Note: A plan may be a patch plan.&#10;The provider acknowledges the reception of the Plan or returns an Error.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="Plan"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <!-- revokePlan -->
        <mal:submitIP name="revokePlan" number="2" supportInReplay="false" comment="Instructs a plan execution function to revoke a previously submitted Plan, making it unavailable for execution. A reference to the Plan (planID and optionally version) is submitted as an ObjectRef.&#10;The provider acknowledges the revocation of the Plan or returns an error.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <!-- getPlanStatus -->
        <mal:requestIP name="getPlanStatus" number="3" supportInReplay="true" comment="Retrieve the current execution status of Plans.&#10;Input: List of references to Plans (planID and optionally version) as ObjectRefs.&#10;Output: List of PlanUpdates.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="planStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanUpdate" />
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="Activate and deactivate execution of Plans.">
        <!-- activatePlan -->
        <mal:requestIP name="activatePlan" number="4" supportInReplay="false" comment="Enables the execution of specified Plans.&#10;Input: List of references to Plans (planID and optionally version) as ObjectRefs.&#10;Output: List  of PlanActivationStatus data structures, comprising Plan status and activationInfo as a String for each Plan in the activation list.&#10;The activationInfo allows the return of deployment specific details on the activation, such as reasons for a failure to activate. For example, the Plan may have been outside its validity period.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="activationStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanActivationStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- deactivatePlan -->
        <mal:requestIP name="deactivatePlan" number="5" supportInReplay="false" comment="Disables the execution of a specified Plans.&#10;Input: List of references to Plans (planID and optionally version) as ObjectRefs and the deactivationMode (as a String).&#10;The deactivationMode argument allows selection of the deactivation behaviour. For example:&#10;•	Orderly (ceases execution of any new Activities, but allows those already initiated to complete)&#10;•	Rapid (pauses execution of the Plan, but allows Activities already initiated to continue until their next defined breakpoint)&#10;•	Immediate (pauses execution of the Plan and all Activities currently in progress).&#10;Note that it is dependent on the service provider implementation which deactivationModes are supported, and that the above list is not exhaustive.&#10;Output: List  of PlanActivationStatus data structures comprising Plan status and activationInfo as a String for each Plan in the deactivation list.&#10;The activationInfo allows the return of deployment specific details on the deactivation, such as the deactivation mode applied or reasons for a failure to deactivate.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="deactivationMode" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="String"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="activationStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="PlanActivationStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3" comment="Subscribe to receive execution status of Plans (at the level of the Plan).">
        <!-- monitorPlanExecution -->
        <mal:pubsubIP name="monitorPlanExecution" number="6" supportInReplay="true" comment="Subscribe to PlanUpdates that report changes in Plan execution status for a filtered set of Plans.&#10;Subscription filter is based on the following keys of the Plan:&#10;•	domain (of planID)&#10;•	planID and version (or all currently loaded Plans)&#10;•	precursorPlan&#10;•	status&#10;•	originator&#10;•	validityPeriod as a time range&#10;Notification Structure: PlanUpdate.&#10;Consumers deregister to stop receiving PlanUpdates.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="planUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanUpdate"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4" comment="Subscribe to receive detailed execution status of Plans (at the level of contained planning activities, events and resources).">
        <!-- monitorPlanExecutionDetail -->
        <mal:pubsubIP name="monitorPlanExecutionDetail" number="7" supportInReplay="true" comment="Subscribe to updates that report changes in the detailed execution status for a filtered set of Plan contents at the level of planning activities, events and resources.&#10;Subscription filter is based on the following keys:&#10;•	domain (of activities, events and resources)&#10;•	planID and version (or all currently loaded Plans)&#10;•	subPlan&#10;•	tags&#10;Notification Structure: ActivityUpdate, EventUpdate, and ResourceUpdate, all optional. It is implementation dependent which details are reported on.&#10;Consumers deregister to stop receiving detailed plan execution status updates.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="activityUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="ActivityUpdate"/>
              </mal:field>
              <mal:field name="eventUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="EventUpdate"/>
              </mal:field>
              <mal:field name="resourceUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="ResourceUpdate"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5" comment="Activate and deactivate execution of Sub-plans, and retrieve execution status of Sub-plans.">
        <!-- activateSubPlan -->
        <mal:requestIP name="activateSubPlan" number="8" supportInReplay="false" comment="Enables the execution of planning activities associated with specified Sub-plans.&#10;Input: List  of Sub-plans as MAL::Identifiers.&#10;Output: List SubPlanActivationStatus data structures comprising sub-plan status and activationInfo as a String for each sub-plan in the activation list.&#10;The activationInfo allows the return of deployment specific details on the activation, such as reasons for a failure to activate.">
          <mal:messages>
            <mal:request>
              <mal:field name="subPlans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="activationStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="SubPlanActivationStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- deactivateSubPlan -->
        <mal:requestIP name="deactivateSubPlan" number="9" supportInReplay="false" comment="Disables the execution of planning activities associated with specified Sub-plans.&#10;Input: List of Sub-plans as MAL::Identifiers and the deactivationMode (as a String).&#10;The deactivationMode argument allows selection of the deactivation behaviour. For example:&#10;•	Orderly (ceases execution of any new Activities, but allows those already initiated to complete)&#10;•	Rapid (pauses execution of the Sub-plan, but allows Activities already initiated to continue until their next defined breakpoint)&#10;•	Immediate (pauses execution of the Sub-plan and all Activities currently in progress).&#10;Note that it is dependent on the service provider implementation which deactivationModes are supported, and that the above list is not exhaustive.&#10;Output: List of SubPlanActivationStatus data structures comprising the sub-plan status and activationInfo as a String for each Sub-plan in the deactivation list.&#10;The activationInfo allows the return of deployment specific details on the deactivation, such as the deactivation mode applied or reasons for a failure to deactivate.">
          <mal:messages>
            <mal:request>
              <mal:field name="subPlans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="deactivationMode" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="String"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="activationStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="SubPlanActivationStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- getSubPlanStatus -->
        <mal:requestIP name="getSubPlanStatus" number="10" supportInReplay="true" comment="Retrieves the current status of Sub-plans.&#10;Input: List of Sub-plans as MAL::Identifiers.&#10;Output: List of SubPlanUpdates.">
          <mal:messages>
            <mal:request>
              <mal:field name="subPlans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="subPlanStatus" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="true" name="SubPlanUpdate"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6" comment="Subscribe to receive execution status of Sub-plans.">
        <!-- monitorSubPlanExecution -->
        <mal:pubsubIP name="monitorSubPlanExecution" number="11" supportInReplay="true" comment="Subscribe to receive updates on execution status of Sub-plans.&#10;Subscription keys shall be based on:&#10;•	domain&#10;•	subPlan&#10;Notification structure: SubPlanUpdate&#10;Notifies the subscriber about changes in Sub-plan execution status for the currently loaded Plan(s).&#10;Consumers deregister to stop receiving detailed plan execution status updates.">
          <mal:messages>
            <mal:publishNotify comment="">
              <mal:field name="subPlanUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="SubPlanUpdate"/>
              </mal:field>
            </mal:publishNotify>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:pubsubIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="7" comment="Suspend and resume execution of ActivityInstances.">
        <!-- suspendActivity -->
        <mal:requestIP name="suspendActivity" number="12" supportInReplay="false" comment="Requests suspension of the execution of selected activities in one or more plans without changing the state of the plan(s).&#10;Input:&#10;•	List of references to Plans (planID and optionally version) as ObjectRefs&#10;•	List of references to Activities (instanceID) as ObjectRefs&#10;•	List of tags&#10;•	suspensionMode as String&#10;The suspentionMode argument allows selection of the suspension behaviour. For example:&#10;•	Orderly (suspends execution of any new Activities, but allows those already initiated to complete)&#10;•	Rapid (suspends execution of any new Activities, but allows any Activities and their Sub-activities already initiated to continue until their next defined breakpoint)&#10;•	Immediate (suspends execution of all Activities, including those currently in progress).&#10;Note that it is dependent on the service provider implementation which deactivationModes are supported, and that the above list is not exhaustive.&#10;Output: List of ActivitySuspensionStatus data structures comprising activity status and suspensionInfo (as String) for each Activity subject to the suspension request.&#10;The suspensionInfo allows the return of deployment specific details on the suspension, such as the suspension mode applied or reasons for a failure to suspend.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="activities" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="tags" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="String"/>
              </mal:field>
              <mal:field name="suspensionMode" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="String"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="suspensionStatus" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="ActivitySuspensionStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- resumeActivity -->
        <mal:requestIP name="resumeActivity" number="13" supportInReplay="false" comment="Requests the resumption of previously suspended activities in one or more plans without changing the state of the plan(s).&#10;Input:&#10;•	List of references to Plans (planID and optionally version) as ObjectRefs&#10;•	List of references to Activities (instanceID) as ObjectRefs&#10;•	List of tags&#10;Output: List of ActivitySuspensionStatus data structures comprising activity status and suspensionInfo (as String) for each Activity subject to the resumption request.&#10;The suspensionInfo allows the return of deployment specific details on the resumption, such as reasons for a failure to resume.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="activities" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="tags" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="String"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="suspensionStatus" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="ActivitySuspensionStatus"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="8" comment="Retrieve a detailed report on the execution status of ActivityInstances.">
        <!-- getActivityStatus -->
        <mal:requestIP name="getActivityStatus" number="14" supportInReplay="true" comment="Requests a detailed Report on the status of Activities at Activity, Sub-plan or Tag level.&#10;Input: List of (planID, activity instanceID, subPlan, tag)&#10;Output: List  of ActivityUpdates.">
          <mal:messages>
            <mal:request>
              <mal:field name="plans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="activities" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="subPlans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="tags" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="String"/>
              </mal:field>
            </mal:request>
            <mal:response>
              <mal:field name="activityStatus" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="ActivityUpdate"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
    </mal:service>

    <mal:service name="PlanInformationManagement" number="4" comment="The Plan Information Management Service is offered by the planning function of an MPS system to enable its users to list and retrieve available definitions for MPS data items, including: planning requests, planning events, planning activities, planning resources and MPS system configuration data. The service may also be offered by a plan execution function.&#10;The service does not support the transfer of planning configuration data to planning or plan execution functions, which is outside the scope of the current MPS services. Nor does it support the insertion or modification of MPS data item definitions.&#10;The structure of the various MPS data item definitions is given in §3.2.">
      <mal:documentation name="High Level Requirements" order="1">
      </mal:documentation>
      <mal:capabilitySet number="1" comment="List and retrieve planning RequestDefinitions.">
        <!-- listRequestDefs -->
        <mal:progressIP name="listRequestDefs" number="1" supportInReplay="false" comment="Request a filtered list of available RequestDefinitions.&#10;Input: List of (domain, definitionID)&#10;Returns: List of (definitionID, version, description).">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="domains" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="requestDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateRequestDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseRequestDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
        <!-- getRequestDefs -->
        <mal:requestIP name="getRequestDefs" number="2" supportInReplay="false" comment="Retrieve a set of available RequestDefinitions.&#10;Input: List of references to RequestDefinitions (ID and optionally version) as ObjectRefs&#10;Output: List of RequestDefinitions.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="requestDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="definitions" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanningRequest" list="true" name="RequestDefinition"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="List and retrieve planning EventDefinitions.">
        <!-- listEventDefs -->
        <mal:progressIP name="listEventDefs" number="3" supportInReplay="false" comment="Request a filtered list of available EventDefinitions.&#10;Input: List of (domain, definitionID)&#10;Output: List of (definitionID, version, description).">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="domains" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="eventDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateEventDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseEventDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
        <!-- getEventDefs -->
        <mal:requestIP name="getEventDefs" number="4" supportInReplay="false" comment="Retrieve a set of available EventDefinitions.&#10;Input: List of references to EventDefinitions (ID and optionally version) as ObjectRefs&#10;Output: List of EventDefinitions.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="eventDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="definitions" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="EventDefinition"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3" comment="List and retrieve planning ActivityDefinitions.">
        <!-- listActivityDefs -->
        <mal:progressIP name="listActivityDefs" number="5" supportInReplay="false" comment="Request a filtered list of available ActivityDefinitions.&#10;Input: List of (domain, definitionID, defaultTags)&#10;Output: List of (definitionID, version, description).">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="domains" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="activityDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateActivityDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseActivityDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
        <!-- getActivityDefs -->
        <mal:requestIP name="getActivityDefs" number="6" supportInReplay="false" comment="Retrieve a set of available ActivityDefinitions.&#10;Input: List of references to ActivityDefinitions (ID and optionally version) as ObjectRefs&#10;Output: List of ActivityDefinitions.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="activityDefs" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="definitions" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="ActivityDefinition"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4" comment="List and retrieve planning ResourceDefinitions.">
        <!-- listResourceDefs -->
        <mal:progressIP name="listResourceDefs" number="7" supportInReplay="false" comment="Request a filtered list of available Resource definitions.&#10;Input: List of (domain, dataType)&#10;Output: List of (ID, version, description).">
          <mal:messages>
            <mal:progress comment="">
              <mal:field name="domains" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="dataType" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Attribute"/>
              </mal:field>
            </mal:progress>
            <mal:acknowledgement comment="">
            </mal:acknowledgement>
            <mal:update comment="">
              <mal:field name="updateResourceDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:update>
            <mal:response comment="">
              <mal:field name="responseResourceDefs" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="DefListEntry"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:progressIP>
        <!-- getResourceDefs -->
        <mal:requestIP name="getResourceDefs" number="8" supportInReplay="false" comment="Retrieve a set of available Resource definitions.&#10;Input: List of references to Resources (ID and optionally version) as ObjectRefs&#10;Output: List of Resources&#10;Note that this operation is designed to retrieve the resource definition and not the current value of the resource (the value field may contain a default value for the resource).">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="resources" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="definitions" canBeNull="false" comment="">
                <mal:type area="MPS" list="true" name="Resource"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5" comment="Retrieve MPS system configuration data [MPSSystemConfig].">
        <!-- getSystemConfig -->
        <mal:requestIP name="getSystemConfig" number="9" supportInReplay="false" comment="Retrieves system configuration data relating to the MPS System.&#10;Output: MPSSystemConfig.">
          <mal:messages>
            <mal:request comment="">
            </mal:request>
            <mal:response comment="">
              <mal:field name="systemConfig" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="MPSSystemConfig"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
      </mal:capabilitySet>
    </mal:service>

    <mal:service name="PlanEdit" number="5" comment="">
      <mal:documentation name="High Level Requirements" order="1">
      </mal:documentation>
      <mal:capabilitySet number="1" comment="Update Plan status.">
        <!-- updatePlanStatus -->
        <mal:submitIP name="updatePlanStatus" number="1" supportInReplay="false" comment="Update of a Plan status by a third party.&#10;Input: Plan reference (planID and optionally version) as an ObjectRef, status, isAlternate flag.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="status" canBeNull="false" comment="">
                <mal:type area="MPS" service="PlanDistribution" list="false" name="PlanStatusEnum"/>
              </mal:field>
              <mal:field name="isAlternate" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Boolean"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="2" comment="Insert or Delete ActivityInstances or EventInstances.">
        <!-- insertActivity -->
        <mal:requestIP name="insertActivity" number="2" supportInReplay="false" comment="Insert a new ActivityInstance into a Plan.&#10;Input: InsertedActivityDetails data structure, which is an extended SimpleActivityDetails (used in Planning Requests) that includes a reference to the Plan into which the Activity is to be inserted and optional start and end triggers.&#10;Output: instanceID of the ActivityInstance created.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="activityDetails" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="InsertedActivityDetails"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="activityInstance" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- insertEvent -->
        <mal:requestIP name="insertEvent" number="3" supportInReplay="false" comment="Inject a new EventInstance into a Plan.&#10;Input: InsertedEventDetails data structure, which includes a reference to the Plan into which the Event is to be inserted, eventTime, and arguments.&#10;Output: instanceID of the EventInstance created.">
          <mal:messages>
            <mal:request comment="">
              <mal:field name="eventDetails" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="InsertedEventDetails"/>
              </mal:field>
            </mal:request>
            <mal:response comment="">
              <mal:field name="eventInstance" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:response>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:requestIP>
        <!-- deleteActivity -->
        <mal:submitIP name="deleteActivity" number="4" supportInReplay="false" comment="Delete a specified ActivityInstance.&#10;Input: Reference to the Plan (planID and version) containing the activity to be deleted; Reference to the ActivityInstance (instanceID) to be deleted.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="activity" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <!-- deleteEvent -->
        <mal:submitIP name="deleteEvent" number="5" supportInReplay="false" comment="Delete a specified EventInstance.&#10;Input: Reference to the Plan (planID and version) containing the event to be deleted; Reference to the EventInstance (instanceID) to be deleted.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="event" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="3" comment="Update ActivityInstances or EventInstances.">
        <!-- updateActivity -->
        <mal:submitIP name="updateActivity" number="6" supportInReplay="false" comment="Update a specified ActivityInstance in a Plan.&#10;Input: Reference to ActivityInstance (instanceID) to be  updated, updated InsertedActivityDetails (which contains the reference to the Plan).">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="activityUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="ActivityUpdate"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
        <!-- updateEvent -->
        <mal:submitIP name="updateEvent" number="7" supportInReplay="false" comment="Update a specified EventInstance in a Plan.&#10;Input: Reference to EventInstance (instanceID) to be updated, updated InsertedEventDetails (which contains the reference to the Plan).">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="eventUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="EventUpdate"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="4" comment="Update Resource value.">
        <!-- updateResource -->
        <mal:submitIP name="updateResource" number="8" supportInReplay="false" comment="Discrete update to the value of a specified Resource at a specified time.&#10;Input: Reference to Plan (planID and version), ResourceUpdate.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="resourceUpdate" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="ResourceUpdate"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="5" comment="Update Resource profile.">
        <!-- updateResourceProfile -->
        <mal:submitIP name="updateResourceProfile" number="9" supportInReplay="false" comment="Update the profile of a specified Resource over time.&#10;Input: Reference to Plan (planID and version), ResourceProfile.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="resourceProfile" canBeNull="false" comment="">
                <mal:type area="MPS" list="false" name="ResourceProfile"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
      <mal:capabilitySet number="6" comment="Apply a time shift to a Plan.">
        <!-- applyTimeShift -->
        <mal:submitIP name="applyTimeShift" number="10" supportInReplay="false" comment="Apply a time shift to a specified Plan or its sub-plans.&#10;Input: Reference to Plan (planID and version), List of subPlans as MAL::Identifiers, offset as Duration.&#10;If the list of SubPlanIDs is empty, the offset is applied to the complete Plan.">
          <mal:messages>
            <mal:submit comment="">
              <mal:field name="plan" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Identifier"/>
              </mal:field>
              <mal:field name="subPlans" canBeNull="false" comment="">
                <mal:type area="MAL" list="true" name="Identifier"/>
              </mal:field>
              <mal:field name="offset" canBeNull="false" comment="">
                <mal:type area="MAL" list="false" name="Duration"/>
              </mal:field>
            </mal:submit>
          </mal:messages>
          <mal:errors>
            <mal:errorRef comment="One or more fields in the message contain invalid values.">
              <mal:type name="INVALID" area="MPS"/>
              <mal:extraInformation comment="ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;    1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;    2.	A UInteger giving a secondary error code that details the reason for invalidity.">
                <mal:type list="true" name="Pair" area="MAL"/>
              </mal:extraInformation>
            </mal:errorRef>
          </mal:errors>
        </mal:submitIP>
      </mal:capabilitySet>
    </mal:service>

    <mal:dataTypes>
      <mal:composite name="ActivityDefinition" shortFormPart="101" comment="An ActivityDefinition is an MO Object that contains static configuration data relating to multiple occurrences of a Planning Activity. Its identity is defined by a constant definitionID and an evolving version, which is updated each time the definition is revised. ActivityDefinitions form part of the Planning Configuration Data.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Definition ID -->
        <mal:field name="definitionID" canBeNull="false" comment="ID of the ActivityDefinition.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Version -->
        <mal:field name="version" canBeNull="false" comment="Version of the ActivityDefinition.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Description of the Activity.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Arg Defs -->
        <mal:field name="argDefs" canBeNull="true" comment="List of Argument Definitions.">
          <mal:type area="MPS" list="true" name="ArgDef"/>
        </mal:field>
        <!-- Constraints -->
        <mal:field name="constraints" canBeNull="true" comment="Set of Constraints applicable to all instances of the Activity.">
          <mal:type area="MPS" list="false" name="ConstraintNode"/>
        </mal:field>
        <!-- Exec Def -->
        <mal:field name="execDef" canBeNull="true" comment="Reference to the definition of an executable body for the Activity (procedure, action sequence, etc.) [external to the MPS Information Model].">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Duration Spec -->
        <mal:field name="durationSpec" canBeNull="true" comment="Supports calculation of an estimated duration of an Activity Instance.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Children -->
        <mal:field name="children" canBeNull="true" comment="Set of Activity Details specifying child activities, optionally with repetition.">
          <mal:type area="MPS" list="false" name="ActivityNode"/>
        </mal:field>
        <!-- Display Type -->
        <mal:field name="displayType" canBeNull="true" comment="Enables a planning system to customise presentation of the Activity in displays.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Default Tags -->
        <mal:field name="defaultTags" canBeNull="true" comment="Default set of Tags that may be used to associate the Activity with others, grouping activities by operational responsibility (controller/group/system) or other criteria.">
          <mal:type area="MAL" list="true" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ActivityInstance" shortFormPart="102" comment="An ActivityInstance is an MO Object that contains the identity of a specific occurrence of a Planning Activity, together with both static and dynamic information associated with that occurrence. It supports relationships to its definition, source, a related planning event and any child activities.&#10;Activity Instances may be contained within a Plan.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Instance ID -->
        <mal:field name="instanceID" canBeNull="false" comment="ID of the ActivityInstance.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Definition -->
        <mal:field name="definition" canBeNull="false" comment="Reference to the ActivityDefinition.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Source -->
        <mal:field name="source" canBeNull="false" comment="Reference to the source of the ActivityInstance, which is either its parent ActivityInstance or a RequestInstance if it is a root Activity.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Related Event -->
        <mal:field name="relatedEvent" canBeNull="true" comment="Optional reference to an EventInstance that is specifically associated with this instance of the Activity. Typically the Activity is placed in response to the Event.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Children -->
        <mal:field name="children" canBeNull="true" comment="References to any child ActivityInstances.">
          <mal:type area="MAL" list="true" name="Identifier"/>
        </mal:field>
        <!-- Comments -->
        <mal:field name="comments" canBeNull="true" comment="Any notes associated with this instance of the Activity.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Constraints -->
        <mal:field name="constraints" canBeNull="true" comment="Set of Constraints applicable to this instance of the Activity.">
          <mal:type area="MPS" list="false" name="ConstraintNode"/>
        </mal:field>
        <!-- Arguments -->
        <mal:field name="arguments" canBeNull="true" comment="Argument values for each Argument defined in the Activity Definition.">
          <mal:type area="MPS" list="true" name="Argument"/>
        </mal:field>
        <!-- Start -->
        <mal:field name="start" canBeNull="true" comment="Optionally specifies the trigger that initiates the Activity: may be Time, Position or Event based.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="true" comment="Optionally specifies the trigger that ends the Activity.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
        <!-- Duration -->
        <mal:field name="duration" canBeNull="true" comment="Optional duration of the Activity (estimated until execution, actual post execution).">
          <mal:type area="MAL" list="false" name="Duration"/>
        </mal:field>
        <!-- Sub-plan -->
        <mal:field name="subPlan" canBeNull="true" comment="Optional association of the Activity with a defined sub-plan.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Tags -->
        <mal:field name="tags" canBeNull="true" comment="Set of Tags that may be used to associate the Activity with others, grouping activities by operational responsibility (controller/group/system) or other criteria.">
          <mal:type area="MAL" list="true" name="String"/>
        </mal:field>
        <!-- Status -->
        <mal:field name="status" canBeNull="false" comment="Current Status of the Activity Instance.">
          <mal:type area="MPS" list="false" name="ActivityStatusEnum"/>
        </mal:field>
        <!-- Exec Instance -->
        <mal:field name="execInst" canBeNull="true" comment="Reference to the instance of an executable body for the Activity (procedure, action sequence, etc.) [external to the MPS Information Model].">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Termination Info -->
        <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for entering the Terminated State and is customisable, but includes:&#10;- Completed (nominal)&#10;- Expired (prior to Activation or during plan Supension)&#10;- Deleted&#10;- Failed (see ErrCode/ErrInfo).">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Error Code -->
        <mal:field name="errCode" canBeNull="true" comment="Error Code relevant in the case of a failure status for the planning activity.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Error Info -->
        <mal:field name="errInfo" canBeNull="true" comment="Supplementary Error Information.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="ActivityStatusEnum" shortFormPart="103" comment="">
        <mal:item nvalue="1" value="PLANNED" comment="The Activity Instance has been included in the Plan."/>
        <mal:item nvalue="2" value="ACTIVATED" comment="The Plan including the Activity Instance has been Activated within the Plan Execution function."/>
        <mal:item nvalue="3" value="EXECUTING" comment="Execution of the Activity Instance has been initiated."/>
        <mal:item nvalue="4" value="SUSPENDED" comment="Execution of the Activity Instance has been suspended."/>
        <mal:item nvalue="5" value="TERMINATED" comment="Execution of the Activity Instance has been terminated (further information is provided in terminationInfo)."/>
      </mal:enumeration>

      <mal:composite name="ActivityDetails" comment="Contains the information required to create one or more Activity Instances, including the specification of argument values and constraints.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Activity Ref -->
        <mal:field name="activityRef" canBeNull="false" comment="Specifies how the Activity Instance is placed with respect to any defined Repetition (0=Start; 1=End). Default is Start.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Activity Offset -->
        <mal:field name="activityOffset" canBeNull="false" comment="Specifies an offset in time for the Activity Instance from any defined Repetition. Default is no offset.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Related Event -->
        <mal:field name="relatedEvent" canBeNull="true" comment="Specifies a related Event (or Event Group) for the Activity Instance. Argument specifications and constraints may reference arguments and attributes of the RelatedEvent.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Comments -->
        <mal:field name="comments" canBeNull="true" comment="Any notes associated with the Activity Details.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ActivityNode" shortFormPart="104" comment="A concrete sub-type of ActivityDetails, an Activity Node is a container node for a set of Activity Details together with an optional Repetition specification. An Activity Node is used as the root node of any Activity Details specification within a Planning Request or parent ActivityDefinition.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ActivityDetails"/>
        </mal:extends>
        <!-- Repetition -->
        <mal:field name="repetition" canBeNull="true" comment="Optional Repetition specification.">
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:field>
        <!-- Activities -->
        <mal:field name="activities" canBeNull="false" comment="Set of ActivityDetails.">
          <mal:type area="MPS" list="true" name="ActivityDetails"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="SimpleActivityDetails" shortFormPart="105" comment="A concrete sub-type of ActivityDetails, a Simple Activity Details provides the information required to instantiate a single ActivityInstance.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ActivityDetails"/>
        </mal:extends>
        <!-- Activity Def -->
        <mal:field name="activityDef" canBeNull="false" comment="Reference to the ActivityDefinition.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Arg Specs -->
        <mal:field name="argSpecs" canBeNull="true" comment="Set of Argument Specifications for each Argument Definition contained in the referenced Activity Definition. These supply a value for each argument, or an expression to enable the value to be derived.">
          <mal:type area="MPS" list="true" name="ArgSpec"/>
        </mal:field>
        <!-- Constraints -->
        <mal:field name="constraints" canBeNull="true" comment="Set of Constraints specific to the Activity Instance to be created.">
          <mal:type area="MPS" list="false" name="ConstraintNode"/>
        </mal:field>
        <!-- Sub-plan -->
        <mal:field name="subPlan" canBeNull="true" comment="Optional association of the Activity with a defined sub-plan.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Tags -->
        <mal:field name="tags" canBeNull="true" comment="Set of Tags that may be used to associate the Activity with an identified sub-plan, grouping activities by operational responsibility (controller/group/system) or other criteria.">
          <mal:type area="MAL" list="true" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ActivityUpdate" shortFormPart="106" comment="ActivityUpdate is a data structure that is used to report the dynamic status of an ActivityInstance in the context of the MPS Plan Execution Control service monitorPlanExecutionDetail and getActivityStatus operations.&#10;Activity Updates may be distributed to subscribing applications, including status displays, to inform them of the latest status of the activity. This may be particularly relevant in conjunction with a Plan Execution function. Activity Updates may be stored in Activity History to provide a complete record of evolving status over time.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Activity Instance -->
        <mal:field name="activityInstance" canBeNull="false" comment="Reference to the Activity Instance to which the status update relates.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Timestamp -->
        <mal:field name="timestamp" canBeNull="false" comment="Time of status update.">
          <mal:type area="MAL" list="false" name="Time"/>
        </mal:field>
        <!-- Plan -->
        <mal:field name="plan" canBeNull="true" comment="Optional reference to the Plan containing the Activity Instance to which this update pertains.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Arguments -->
        <mal:field name="arguments" canBeNull="true" comment="Argument values.">
          <mal:type area="MPS" list="true" name="Argument"/>
        </mal:field>
        <!-- Start -->
        <mal:field name="start" canBeNull="true" comment="Optionally specifies the trigger that initiates the Activity: may be Time, Position or Event based.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="true" comment="Optionally specifies the trigger that ends the Activity.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
        <!-- Duration -->
        <mal:field name="duration" canBeNull="true" comment="Optional duration of the Activity (estimated until execution, actual post execution).">
          <mal:type area="MAL" list="false" name="Duration"/>
        </mal:field>
        <!-- Sub-plan -->
        <mal:field name="subPlan" canBeNull="true" comment="Optional association of the Activity with a defined sub-plan.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Tags -->
        <mal:field name="tags" canBeNull="true" comment="Set of Tags that may be used to associate the Activity with an identified sub-plan, grouping activities by operational responsibility (controller/group/system) or other criteria.">
          <mal:type area="MAL" list="true" name="String"/>
        </mal:field>
        <!-- Status -->
        <mal:field name="status" canBeNull="false" comment="Current Status of the Activity Instance.">
          <mal:type area="MPS" list="false" name="ActivityStatusEnum"/>
        </mal:field>
        <!-- Exec Instance -->
        <mal:field name="execInst" canBeNull="true" comment="Reference to the instance of an executable body for the Activity (procedure, action sequence, etc.) [external to the MPS Information Model].">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Termination Info -->
        <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for entering the Terminated State and is customisable, but includes:&#10;- Completed (nominal)&#10;- Expired (prior to Activation or during plan Supension)&#10;- Deleted&#10;- Failed (see ErrCode/ErrInfo).">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Error Code -->
        <mal:field name="errCode" canBeNull="true" comment="Error Code relevant in the case of a failure status for the planning activity.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Error Info -->
        <mal:field name="errInfo" canBeNull="true" comment="Supplementary Error Information.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="InsertedActivityDetails" shortFormPart="107" comment="A concrete sub-type of SimpleActivityDetails that extends the latter to provide additional details for a single ActivityInstance to be inserted into a Plan using the MPS Plan Edit service.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="SimpleActivityDetails"/>
        </mal:extends>
        <!-- Plan -->
        <mal:field name="plan" canBeNull="false" comment="Reference to the Plan into which the Activity is to be inserted.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Start -->
        <mal:field name="start" canBeNull="true" comment="Optionally specifies the trigger that initiates the Activity: may be Time, Position or Event based.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="true" comment="Optionally specifies the trigger that ends the Activity.">
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ActivitySuspensionStatus" shortFormPart="108" comment="A data structure that returns the status and supplementary suspension information for an ActivityInstance affected by an MPS Plan Execution Control service SuspendActivity or ResumeActivity operation.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Activity Instance -->
        <mal:field name="activityInstance" canBeNull="false" comment="Reference to an Activity Instance.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Plan -->
        <mal:field name="plan" canBeNull="true" comment="Optional reference to the Plan containing the Activity Instance.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Status -->
        <mal:field name="status" canBeNull="false" comment="Current Status of the Activity Instance.">
          <mal:type area="MPS" list="false" name="ActivityStatusEnum"/>
        </mal:field>
        <!-- Suspension Info -->
        <mal:field name="suspensionInfo" canBeNull="true" comment="Supplementary information on the suspension/resumption status of the Activity Instance.&#10;This may detail the point of suspension, which may be specific to the suspension mode; or a reason why resumption was not possible.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="EventDefinition" shortFormPart="201" comment="An EventDefinition is an MO Object that contains static configuration data relating to multiple occurrences of a Planning Event. Its identity is defined by a constant definitionID and an evolving version, which is updated each time the definition is revised. Event Definitions form part of the Planning Configuration Data.&#10;Events may be either Predicted or Potential. Events that are predictable either by time or position can have specific instances included in a Plan. Potential Events are those that may occur during the execution of a Plan, but the specific time or position is not predicted.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Definition ID -->
        <mal:field name="definitionID" canBeNull="false" comment="ID of the EventDefinition.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Version -->
        <mal:field name="version" canBeNull="false" comment="Version of the EventDefinition.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Description of the Event.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Event Type -->
        <mal:field name="eventType" canBeNull="false" comment="Enumeration: one of {Predicted, Potential} indicating the type of Event.">
          <mal:type area="MPS" list="false" name="EventTypeEnum"/>
        </mal:field>
        <!-- Display Type -->
        <mal:field name="displayType" canBeNull="true" comment="Enables a planning system to customise presentation of the Event in displays.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Arg Defs -->
        <mal:field name="argDefs" canBeNull="true" comment="List of Argument Definitions.">
          <mal:type area="MPS" list="true" name="ArgDef"/>
        </mal:field>
        <!-- Event Defs -->
        <mal:field name="eventDefs" canBeNull="true" comment="List of child Event Definitions. For a single Event, this list shall be empty; for a group Event, the list shall be populated.">
          <mal:type area="MAL" list="true" name="ULong"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="EventInstance" shortFormPart="202" comment="An EventInstance is an MO Object that contains the identity of a specific occurrence of a Planning Event, together with both static and dynamic information associated with that occurrence. It supports relationships to its definition and source.&#10;The source of an EventInstance may be an external event, corresponding to a NAV Predicted Event or a CSS Contact Event.&#10;EventInstances may be contained within a Plan.&#10;EventInstances may be referenced as a related event by an ActivityInstance, so that the ActivityInstance can reference the timing and arguments of the related EventInstance.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Instance ID -->
        <mal:field name="instanceID" canBeNull="false" comment="ID of the EventInstance.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Definition -->
        <mal:field name="definition" canBeNull="false" comment="Reference to the EventDefinition.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Source Event -->
        <mal:field name="sourceEvent" canBeNull="true" comment="Reference to an external source event (e.g. NAV predicted event, or CSS contact event).">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Events -->
        <mal:field name="events" canBeNull="true" comment="List of references to child EventInstances. For a single Event, this list is empty; for a group Event, the list will be populated.">
          <mal:type area="MAL" list="true" name="Identifier"/>
        </mal:field>
        <!-- Event Time -->
        <mal:field name="eventTime" canBeNull="true" comment="Predicted or actual time of the Event. EventTime is nullable: it can be predicted without an EventTime (e.g. if Position based).">
          <mal:type area="MAL" list="false" name="FineTime"/>
        </mal:field>
        <!-- Arguments -->
        <mal:field name="arguments" canBeNull="true" comment="Argument values for each Argument defined in the Event Definition.">
          <mal:type area="MPS" list="true" name="Argument"/>
        </mal:field>
        <!-- Event Status -->
        <mal:field name="eventStatus" canBeNull="false" comment="Current Status of the Event Instance.">
          <mal:type area="MPS" list="false" name="EventStatusEnum"/>
        </mal:field>
        <!-- Termination Info -->
        <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for entering the Terminated State and is customisable, but includes:&#10;- Occurred (Event has been triggered)&#10;- Did Not Occur (Event expired or did not occur within validity period)&#10;- Deleted (Event was deleted).">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="EventTypeEnum" shortFormPart="203" comment="">
        <mal:item nvalue="1" value="PREDICTED" comment="Events that are predictable either by time or position can have specific instances included in a Plan."/>
        <mal:item nvalue="2" value="POTENTIAL" comment="Potential Events are those that may occur during the execution of a Plan, but the specific time or position is not predicted."/>
      </mal:enumeration>

      <mal:enumeration name="EventStatusEnum" shortFormPart="204" comment="">
        <mal:item nvalue="1" value="GROUP" comment="The Event is a Group Event."/>
        <mal:item nvalue="2" value="PLANNED" comment="The Event Instance has been included in the Plan."/>
        <mal:item nvalue="3" value="ACTIVATED" comment="The Plan including the Event Instance has been Activated within the Plan Execution function."/>
        <mal:item nvalue="4" value="TERMINATED" comment="The Event Instance has reached a terminal status (further information is provided in terminationInfo)."/>
      </mal:enumeration>

      <mal:composite name="EventUpdate" shortFormPart="205" comment="EventUpdate is a data structure that is used to report the dynamic status of an EventInstance in the context of the MPS Plan Execution Control service monitorPlanExecutionDetail operation.&#10;EventUpdates may be distributed to subscribing applications, including status displays, to inform them of the latest status of the event. This may be particularly relevant in conjunction with a Plan Execution function. EventUpdates may be stored in Event History to provide a complete record of evolving status over time.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Event Instance -->
        <mal:field name="eventInstance" canBeNull="false" comment="Reference to the Event Instance to which the status update relates.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Timestamp -->
        <mal:field name="timestamp" canBeNull="false" comment="Time of status update.">
          <mal:type area="MAL" list="false" name="Time"/>
        </mal:field>
        <!-- Event Time -->
        <mal:field name="eventTime" canBeNull="false" comment="Predicted or actual time of the Event. EventTime is nullable: it can be predicted without an EventTime (e.g. if Position based).">
          <mal:type area="MAL" list="false" name="FineTime"/>
        </mal:field>
        <!-- Arguments -->
        <mal:field name="arguments" canBeNull="true" comment="Argument values.">
          <mal:type area="MPS" list="true" name="Argument"/>
        </mal:field>
        <!-- Event Status -->
        <mal:field name="eventStatus" canBeNull="false" comment="Current Status of the Event Instance.">
          <mal:type area="MPS" list="false" name="EventStatusEnum"/>
        </mal:field>
        <!-- Termination Info -->
        <mal:field name="terminationInfo" canBeNull="true" comment="TerminationInfo provides the reason for entering the Terminated State and is customisable, but includes:&#10;- Occurred (Event has been triggered)&#10;- Did Not Occur (Event expired or did not occur within validity period)&#10;- Deleted (Event was deleted).">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="InsertedEventDetails" shortFormPart="206" comment="A data structure that provides the information required to create the EventInstance to be inserted into a Plan using the MPS Plan Edit service.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Plan -->
        <mal:field name="plan" canBeNull="false" comment="Reference to the Plan into which the Event is to be inserted.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Event Def -->
        <mal:field name="eventDef" canBeNull="false" comment="Reference to the EventDefinition.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Event Time -->
        <mal:field name="eventTime" canBeNull="false" comment="Specifies the predicted or actual time of the Event. For an inserted Event this must be present.">
          <mal:type area="MAL" list="false" name="FineTime"/>
        </mal:field>
        <!-- Arguments -->
        <mal:field name="arguments" canBeNull="true" comment="Argument values.">
          <mal:type area="MPS" list="true" name="Argument"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Resource" shortFormPart="301" comment="A Resource is an MO Object that contains both the static attributes that define a Planning Resource and a dynamic attribute that holds its current value. Its identity is defined by a constant resourceID and evolving version, which is updated each time the definition is revised. Resource definitions form part of the Planning Configuration Data and in practice the value attribute may be omitted in this context, although it may also be used to provide an initial or default value.&#10;As previously described, depending on the Resource DataType, the Resource definition may require additional type specific attributes to support data validation. SubTypes are defined for Numeric, String and enumerated Status type Resources. The base Resource MO Object type can be used where no data validation is applicable. The following attributes are applicable to the base type and all sub-types.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Resource ID -->
        <mal:field name="resourceID" canBeNull="false" comment="ID of the Resource.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Version -->
        <mal:field name="version" canBeNull="false" comment="Version of the Resource definition.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Description of the Resource.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Data Type -->
        <mal:field name="dataType" canBeNull="false" comment="Specifies the data type of the Resource, which must be a supported MAL Attribute type.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. Specifies the units the value of the Resource is expressed in.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="true" comment="Value of the resource. MAL Attribute type must match the DataType of the Resource definition.&#10;The value is only nullable in the context of a Resource Definition (Planning Configuration Data).">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="NumericResource" shortFormPart="302" comment="Sub-type of Resource applicable to Resources of any numeric type, including Duration, that provides additional attributes for the specification of numeric data validation.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Resource"/>
        </mal:extends>
        <!-- Minimum -->
        <mal:field name="minimum" canBeNull="false" comment="Defines the permitted minimum value over time.">
          <mal:type area="MPS" list="false" name="ResourceProfile"/>
        </mal:field>
        <!-- Maximum -->
        <mal:field name="maximum" canBeNull="false" comment="Defines the permitted maximum value over time.">
          <mal:type area="MPS" list="false" name="ResourceProfile"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="StringResource" shortFormPart="303" comment="Sub-type of Resource applicable to Resources of type String, that provides additional attributes for the specification of string data validation.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Resource"/>
        </mal:extends>
        <!-- Maximum Length -->
        <mal:field name="maxLength" canBeNull="false" comment="Maximum length of the string (characters).">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Regex -->
        <mal:field name="regex" canBeNull="false" comment="A “regular expression” or sequence of characters defining a character pattern that the string value must match.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="StatusResource" shortFormPart="304" comment="Sub-type of Resource that provides additional attributes to support data validation and interpretation for integer type arguments that are effectively enumerated Statuses.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Resource"/>
        </mal:extends>
        <!-- Allowed Values -->
        <mal:field name="allowedValues" canBeNull="false" comment="Set of allowed State definitions, comprising the enumerated value and an associated text label.">
          <mal:type area="MPS" list="true" name="StateDef"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ResourceProfile" shortFormPart="305" comment="A Resource Profile provides the evolution of a value for a single Planning Resource over time as a set of Profile Segments.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Resource -->
        <mal:field name="resourceDef" canBeNull="false" comment="Reference to a Resource.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Profile Segments -->
        <mal:field name="profileSegments" canBeNull="false" comment="Set of Profile Segments.">
          <mal:type area="MPS" list="true" name="ProfileSegment"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ProfileSegment" shortFormPart="306" comment="A Profile Segment defines the time range and interpolation method for a set of Profile Entries.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Interpolation -->
        <mal:field name="interpolation" canBeNull="false" comment="Interpolation method to be applied for values lying between points defined in the Profile Segment.&#10;Default = Step.">
          <mal:type area="MPS" list="false" name="InterpolationTypeEnum"/>
        </mal:field>
        <!-- Start -->
        <mal:field name="start" canBeNull="false" comment="Start of time range covered by the Profile Segment.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="false" comment="End of time range covered by the Profile Segment.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- Start Included -->
        <mal:field name="startIncluded" canBeNull="false" comment="Indicates whether the Start time is included in the Profile Segment.&#10;Default = True.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- End Included -->
        <mal:field name="endIncluded" canBeNull="false" comment="Indicates whether the End time is included in the Profile Segment. This allows the same Time to be used as the end of one segment and the start of another.&#10;Default = False.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Profile Entries -->
        <mal:field name="profileEntries" canBeNull="false" comment="Set of Profile Entries (resource value points).">
          <mal:type area="MPS" list="true" name="ProfileEntry"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="InterpolationTypeEnum" shortFormPart="307" comment="">
        <mal:item nvalue="1" value="STEP" comment="No interpolation: resource values remain unchanged between defined points."/>
        <mal:item nvalue="2" value="LINEAR" comment="Linear interpolation: resource values follow a straight line between defined points."/>
        <mal:item nvalue="3" value="POLYNOMIAL" comment="Polynomial interpolation: resource values follow a curve fitting the defined points."/>
      </mal:enumeration>

      <mal:composite name="ProfileEntry" shortFormPart="308" comment="Defines the value [or minimum/maximum value] of a resource at a particular point in time.&#10;The data type of the Value can be any valid MAL Attribute type, but must match the defined DataType in the corresponding Resource definition.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Time -->
        <mal:field name="time" canBeNull="false" comment="Time of resource data point.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Value of resource data point.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RelativeResourceProfile" shortFormPart="309" comment="A variation on Resource Profile, the Relative Resource Profile uses relative timestamps of type Duration (indicating an offset from a reference time, such as the start time of an Activity). Relative Resource Profiles are used in the context of a Complex Resource Constraint.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Resource -->
        <mal:field name="resource" canBeNull="false" comment="Reference to a Resource.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Rel Profile Segments -->
        <mal:field name="profileSegments" canBeNull="false" comment="Set of Relative Profile Segments.">
          <mal:type area="MPS" list="true" name="RelativeProfileSegment"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RelativeProfileSegment" shortFormPart="310" comment="A Relative Resource Segment defines the time range and interpolation method for a set of Relative Profile Entries.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Interpolation -->
        <mal:field name="interpolation" canBeNull="false" comment="Interpolation method to be applied for values lying between points defined in the Profile Segment.&#10;Default = Step.">
          <mal:type area="MPS" list="false" name="InterpolationTypeEnum"/>
        </mal:field>
        <!-- Start -->
        <mal:field name="start" canBeNull="false" comment="Relative Start of time range covered by the Relative Profile Segment.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="false" comment="Relative End of time range covered by the Relative Profile Segment.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Start Included -->
        <mal:field name="startIncluded" canBeNull="false" comment="Indicates whether the Start time is included in the Profile Segment.&#10;Default = True.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- End Included -->
        <mal:field name="endIncluded" canBeNull="false" comment="Indicates whether the End time is included in the Profile Segment. This allows the same Time to be used as the end of one segment and the start of another.&#10;Default = False.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Profile Entries -->
        <mal:field name="profileEntries" canBeNull="false" comment="Set of Relative Profile Entries (resource value points).">
          <mal:type area="MPS" list="true" name="RelativeProfileEntry"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RelativeProfileEntry" shortFormPart="311" comment="Defines the value [or minimum/maximum value] of a resource at a relative point in time.&#10;Specific sub-types exist for each allowed data type for a Resource. These replace the Variant type Value attribute with one of concrete data type.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Time -->
        <mal:field name="time" canBeNull="false" comment="Relative time of resource data point.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Value of resource data point.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ResourceUpdate" shortFormPart="312" comment="ResourceUpdate is a data structure that is used to report the value of a Resource at a given point in time in the context of the MPS Plan Execution Control service monitorPlanExecutionDetail operation, or to supply an updated value for a Resource in the context of the MPS Plan Edit service.&#10;Resource Updates may be distributed to subscribing applications, including status displays, to inform them of the latest value of the Resource. This may be particularly relevant in conjunction with a Plan Execution function. Resource Updates may be stored in Resource History to provide a complete record of evolving value over time.&#10;Resource Updates are also effectively contained within a Plan to describe the predicted evolution of Resources over the duration of that Plan. However, in this context the Resource Profile construct is used.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Resource -->
        <mal:field name="resource" canBeNull="false" comment="Reference to the Resource to which the value update relates.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Timestamp -->
        <mal:field name="timestamp" canBeNull="false" comment="Time of Resource value update.">
          <mal:type area="MAL" list="false" name="Time"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Value of the resource. MAL Attribute type must match the DataType of the Resource Definition.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="MPSSystemConfig" shortFormPart="401" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Version -->
        <mal:field name="version" canBeNull="false" comment="Version of MPS System Config.">
          <mal:type area="MAL" list="false" name="ULong"/>
        </mal:field>
        <!-- Time System -->
        <mal:field name="timeSystem" canBeNull="false" comment="Specifies the time system used by the MPS system.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Epoch -->
        <mal:field name="epoch" canBeNull="false" comment="Specifies the epoch used by the MPS system.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Custom Config -->
        <mal:field name="customConfig" canBeNull="true" comment="Optional set of custom configuration parameters defined as a set of named values.">
          <mal:type area="MAL" list="true" name="NamedValue"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="FunctionDefinition" shortFormPart="501" comment="FunctionDefinition is a data structure that contains static configuration data relating to built-in Boolean functions of an MPS system, each of which has a specified Identifier and optional set of argument definitions. This may change over time, each comprising a separate version of the definition. Function Definitions form part of the Planning Configuration Data.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Function ID -->
        <mal:field name="functionID" canBeNull="false" comment="ID of the Function.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Version -->
        <mal:field name="version" canBeNull="false" comment="Version of the Function Definition.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Description of the Function.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Arg Defs -->
        <mal:field name="argDefs" canBeNull="true" comment="List of Argument Definitions.">
          <mal:type area="MPS" list="true" name="ArgDef"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="FunctionDetails" shortFormPart="502" comment="Contains the information required to invoke a defined Function, including the specification of argument values.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Function -->
        <mal:field name="function" canBeNull="false" comment="ID of a specific Function Definition.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Arg Specs -->
        <mal:field name="argSpecs" canBeNull="true" comment="Set of Argument Specifications for each Argument Definition contained in the referenced Function Definition. These supply a value for each argument, or an expression to enable the value to be derived.">
          <mal:type area="MPS" list="true" name="ArgSpec"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="ArgTypeEnum" shortFormPart="1" comment="ArgTypeenum is an MPS extension of the MAL::AttributeType that also allows specification of the data type as Position or Direction.">
        <mal:item nvalue="1" value="BLOB" comment="Binary object."/>
        <mal:item nvalue="2" value="BOOLEAN" comment="Boolean value (True or False)."/>
        <mal:item nvalue="3" value="DURATION" comment="Length of time in seconds."/>
        <mal:item nvalue="4" value="FLOAT" comment="Floating point number (32 bits)."/>
        <mal:item nvalue="5" value="DOUBLE" comment="Double precision floating point number (64 bits)."/>
        <mal:item nvalue="6" value="IDENTIFIER" comment="The Identifier structure is used to store an identifier and can be used for indexing. It is a variable-length, unbounded, Unicode string."/>
        <mal:item nvalue="7" value="OCTET" comment="Signed 8 bit Integer."/>
        <mal:item nvalue="8" value="U_OCTET" comment="Unsigned 8 bit Integer."/>
        <mal:item nvalue="9" value="SHORT" comment="Signed 16 bit Integer."/>
        <mal:item nvalue="10" value="U_SHORT" comment="Unsigned 16 bit Integer."/>
        <mal:item nvalue="11" value="INTEGER" comment="Signed 32 bit Integer."/>
        <mal:item nvalue="12" value="U_INTEGER" comment="Unsigned 32 bit Integer."/>
        <mal:item nvalue="13" value="LONG" comment="Signed 64 bit Integer."/>
        <mal:item nvalue="14" value="U_LONG" comment="Unsigned 64 bit Integer."/>
        <mal:item nvalue="15" value="STRING" comment="Text. It is a variable length, unbounded, Unicode string."/>
        <mal:item nvalue="16" value="TIME" comment="Absolute date-time to millisecond resolution."/>
        <mal:item nvalue="17" value="FINETIME" comment="Absolute date-time to picosecond resolution."/>
        <mal:item nvalue="18" value="URI" comment="Uniform Resource Identifier (address). It is a variable-length, unbounded Unicode string."/>
        <mal:item nvalue="19" value="OBJECT_ID" comment="Object Identifier."/>
        <mal:item nvalue="20" value="OBJECT_REF" comment="Object Reference (Domain, ID and Version)."/>
        <mal:item nvalue="21" value="VERSION" comment="Object Version."/>
        <mal:item nvalue="129" value="DIRECTION" comment="MPS Direction."/>
        <mal:item nvalue="130" value="POSITION" comment="MPS Position."/>
      </mal:enumeration>

      <mal:enumeration name="TimeReferenceEnum" shortFormPart="2" comment="">
        <mal:item nvalue="1" value="TBD" comment=""/>
      </mal:enumeration>

      <mal:composite name="Position" shortFormPart="3" comment="The Position data type is used to specify a physical location. The Position type is defined in [PRM] §3.3.2.11 (where it is called the “Orbit Entity” type). Only the Ephemeris object and Orbit file representations are supported in PRM template parameters and as such in Pointing Constraint attributes.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Ref -->
        <mal:field name="ref" canBeNull="false" comment="Name of a reusable Position definition. If provided, the other Position attributes will be ignored.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Position Type -->
        <mal:field name="positionType" canBeNull="false" comment="Enumeration: one of {Cartesian, Orbit, Object} indicating the type of coordinates used.">
          <mal:type area="MPS" list="false" name="PositionTypeEnum"/>
        </mal:field>
        <!-- Cartesian -->
        <mal:field name="cartesian" canBeNull="true" comment="Mandatory for PositionType “Cartesian”.">
          <mal:type area="MPS" list="false" name="CartesianCoords"/>
        </mal:field>
        <!-- Orbit -->
        <mal:field name="orbit" canBeNull="true" comment="Mandatory for PositionType “Orbit”.">
          <mal:type area="MPS" list="false" name="OrbitalCoords"/>
        </mal:field>
        <!-- Object -->
        <mal:field name="object" canBeNull="true" comment="Mandatory for PositionType “Object”. Name or identifier of an ephemeris object (see [PRM] reference #7) or a mission specific object.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Frame -->
        <mal:field name="frame" canBeNull="true" comment="Mandatory for PositionType “Cartesian”. The coordinate frame name, as defined in [PRM] annex B2, or a mission specific frame.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Only applicable for PositionType “Cartesian”, ignored for other coordinate types. The distance unit name, as defined in [PRM] annex D.&#10;Default = “km”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="PositionTypeEnum" shortFormPart="4" comment="">
        <mal:item nvalue="1" value="CARTESIAN" comment="Position defined using Cartesian Coordinates."/>
        <mal:item nvalue="2" value="ORBIT" comment="Position defined in terms of Orbital Coordinates."/>
        <mal:item nvalue="3" value="OBJECT" comment="Position defined in terms of a named object."/>
      </mal:enumeration>

      <mal:composite name="CartesianCoords" shortFormPart="5" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- X -->
        <mal:field name="x" canBeNull="false" comment="Cartesian x coordinate defined in the given Frame and with values of the given Unit.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Y -->
        <mal:field name="y" canBeNull="false" comment="Cartesian y coordinate defined in the given Frame and with values of the given Unit.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Z -->
        <mal:field name="z" canBeNull="false" comment="Cartesian z coordinate defined in the given Frame and with values of the given Unit.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="OrbitalCoords" shortFormPart="6" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Orbit File -->
        <mal:field name="orbitFile" canBeNull="false" comment="Name of or reference to a file containing an Orbit Data Message [ODM].">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Direction" shortFormPart="7" comment="The Direction data type is used to specify a pointing direction or attitude.&#10;The Direction type is defined in [PRM] §3.3.2.9. Only the Coordinates representation is supported in PRM template parameters and as such in Pointing Constraint attributes.&#10;A direction is either defined in the base frame (e.g. an inertial frame) and any sub-frame of the base frame, or in a secondary frame (i.e. the pointing frame, e.g. a spacecraft frame) or any sub-frame of the secondary frame (e.g. an instrument boresight).">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Ref -->
        <mal:field name="ref" canBeNull="true" comment="Name of a reusable Direction definition. If provided, the other Direction attributes will be ignored.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Direction Type -->
        <mal:field name="directionType" canBeNull="false" comment="Enumeration: one of {Cartesian, Spherical, RADec, NamedTarget} indicating the type of coordinates used.">
          <mal:type area="MPS" list="false" name="DirectionTypeEnum"/>
        </mal:field>
        <!-- Cartesian -->
        <mal:field name="cartesian" canBeNull="true" comment="Mandatory for DirectionType “Cartesian”. Dimensionless unit vector. Either a direction in the base frame or in a secondary frame may be defined.">
          <mal:type area="MPS" list="true" name="CartesianCoords"/>
        </mal:field>
        <!-- Spherical -->
        <mal:field name="spherical" canBeNull="true" comment="Mandatory for DirectionType “Spherical”. The unit may be defined here. Typically used to define a direction in a secondary frame. When used to specify a surface coordinate, this actually represents a {longitude, latitude} pair.">
          <mal:type area="MPS" list="false" name="SphericalCoords"/>
        </mal:field>
        <!-- RADec -->
        <mal:field name="RADec" canBeNull="true" comment="Mandatory for DirectionType “RADec”. The unit may be defined.">
          <mal:type area="MPS" list="false" name="RADecCoords"/>
        </mal:field>
        <!-- Named Target -->
        <mal:field name="namedTarget" canBeNull="true" comment="Mandatory for DirectionType “NamedTarget”. Name or identifier of a catalogued celestial object or a mission specific object.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Frame -->
        <mal:field name="frame" canBeNull="false" comment="Mandatory for all DirectionTypes. The coordinate frame name, as defined in [PRM] annex B2, or a mission specific frame.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Only applicable for DirectionType “Spherical” and “RADec”, ignored for other coordinate types. To be one of the Angle units as defined in [PRM] annex D.&#10;Default = “deg”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="DirectionTypeEnum" shortFormPart="8" comment="">
        <mal:item nvalue="1" value="CARTESIAN" comment="Direction defined using Cartesian Coordinates."/>
        <mal:item nvalue="2" value="SPHERICAL" comment="Direction defined using Spherical Coordinates."/>
        <mal:item nvalue="3" value="RA_DEC" comment="Direction defined using Right Ascension and Declination."/>
        <mal:item nvalue="4" value="NAMED_TARGET" comment="Direction defined by a named Target."/>
      </mal:enumeration>

      <mal:composite name="SphericalCoords" shortFormPart="9" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Azimuth -->
        <mal:field name="azimuth" canBeNull="false" comment="Angular coordinate. May also represent Longitude.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Elevation -->
        <mal:field name="elevation" canBeNull="false" comment="Angular coordinate. May also represent Latitude.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RADecCoords" shortFormPart="10" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- RA -->
        <mal:field name="ra" canBeNull="false" comment="Right Ascension: Celestial angular coordinate, measured eastward along the celestial equator.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Dec -->
        <mal:field name="dec" canBeNull="false" comment="Declination: Celestial angular coordinate, north or south of the celestial equator.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PhysicalValue" comment="Physical Value is an abstract base type for the specific value types defined below. Only specific value types are used in the Pointing Constraint definitions below.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Physical value.">
          <mal:type area="MAL" list="true" name="Double"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional unit. The unit type depends on the specific value type, as defined in [PRM] annex D.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Angle" shortFormPart="11" comment="Has units of type Angle.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PhysicalValue"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="AngularVelocity" shortFormPart="12" comment="Has units of type AngularVelocity.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PhysicalValue"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="Distance" shortFormPart="13" comment="Has units of type Distance.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PhysicalValue"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="Expression" shortFormPart="14" comment="When entering MPS data, it is often not possible to provide an absolute value for a required attribute. Instead, it is necessary to provide a calculation to be performed at run time that supplies the value. These calculations are defined as expressions of a specified data type. The data type can be any defined ArgType [see §4.3.1], which may be any MAL Attribute type, Position or Direction.&#10;Within the MPS Information Model, derived sub-types of Expression are used to constrain the result of an expression is of a specific data type. These are shown in grey in Figure 9. The attribute set for all types of expression is the same as that of the base class.&#10;The expressions are themselves text strings which comprise a sequence of operands and operators. Operands may be literals or references to objects and their attributes or arguments, as defined within the MPS information model.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Type -->
        <mal:field name="type" canBeNull="false" comment="Enumeration specifying the data type of the result of the expression.">
          <mal:type area="MPS" list="false" name="ArgTypeEnum"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Providing the ArgType is a MAL Attribute type, this field may be used to hold a simple literal value or the evaluated result of the expression.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
        <!-- Expression Language -->
        <mal:field name="expressionLanguage" canBeNull="false" comment="Defines the expression language used to specify the expression.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Expression -->
        <mal:field name="expression" canBeNull="false" comment="The text of the expression.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ObjectExpression" shortFormPart="15" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="PositionExpression" shortFormPart="16" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="DirectionExpression" shortFormPart="17" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="DurationExpression" shortFormPart="18" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="TimeExpression" shortFormPart="19" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="BooleanExpression" shortFormPart="20" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="IntegerExpression" shortFormPart="21" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="RealExpression" shortFormPart="22" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="Slider" shortFormPart="23" comment="Used to indicate a relative position with respect to an MPS object, such as a planning activity where 0 represents the start and 1 the end of the activity. The slider is a real number that can represent any point between these two extremes.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Position -->
        <mal:field name="position" canBeNull="false" comment="Relative point between the start and end of an MPS object, where 0 represents the start and 1 represents the end.">
          <mal:type area="MAL" list="false" name="Float"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="StateDef" shortFormPart="24" comment="Status values may be represented as enumerated Integers, but the enumeration is not defined by the standard, but in the context of Planning Configuration data. StateDefs hold the definitions of the text labels associated with specific status values.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Enumerated value of the Status.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- State -->
        <mal:field name="state" canBeNull="false" comment="Text label associated with the enumerated value.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="TimeWindow" shortFormPart="25" comment="Represents a specific period of time, specified as two Expressions of type Time defining the Start and End of the TimeWindow.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Start -->
        <mal:field name="start" canBeNull="false" comment="Start time of the Time Window.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- End -->
        <mal:field name="end" canBeNull="false" comment="End time of the Time Window.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="EventWindow" shortFormPart="26" comment="Represents a specific period relative to two events that mark the start and end of the EventWindow.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Start Event -->
        <mal:field name="startEvent" canBeNull="false" comment="The start of the Event Window is relative to the referenced StartEvent.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Start Offset -->
        <mal:field name="startOffset" canBeNull="false" comment="The start of the Event Window is offset by the defined time period from the StartEvent.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End Event -->
        <mal:field name="endEvent" canBeNull="false" comment="The end of the Event Window is relative to the referenced EndEvent.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- End Offset -->
        <mal:field name="endOffset" canBeNull="false" comment="The end of the Event Window is offset by the defined time period from the EndEvent.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="DefListEntry" shortFormPart="27" comment="Used in the context of the MPS Plan Information Management service, this holds a list of definitions for a specified type of MPS Data Item, together with their definitions.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Definition ID -->
        <mal:field name="definitionID" canBeNull="false" comment="Item Definition ID and Version.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Description of the Item.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ArgDef" shortFormPart="28" comment="The definition of an argument is an ArgDef, a set of which may be contained within the definition MO object of a planning event, planning activity or planning request.  This defines the name and data type of the argument. Depending on the data type, the ArgDef may require additional type specific attributes to support data validation. SubTypes are identified for Numeric, String and Status arguments.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Argument Name -->
        <mal:field name="argName" canBeNull="false" comment="Name of the argument.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Description -->
        <mal:field name="description" canBeNull="false" comment="Extended description of the argument.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Argument Type -->
        <mal:field name="ArgTypeEnum" canBeNull="false" comment="Enumeration specifying the data type of the argument.">
          <mal:type area="MPS" list="false" name="ArgTypeEnum"/>
        </mal:field>
        <!-- Argument Units -->
        <mal:field name="argUnits" canBeNull="false" comment="Units that the argument value is expressed in.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Is Array -->
        <mal:field name="isArray" canBeNull="false" comment="If True, indicates that the argument is an array of values of type ArgType.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="NumericArgDef" shortFormPart="29" comment="Extended sub-type of ArgDef that provides additional attributes to support data validation for numeric data types.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ArgDef"/>
        </mal:extends>
        <!-- Min -->
        <mal:field name="min" canBeNull="false" comment="Minimum value of the argument.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Max -->
        <mal:field name="max" canBeNull="false" comment="Maximum value of the argument.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
        <!-- Precision -->
        <mal:field name="precision" canBeNull="false" comment="Precision of the argument.">
          <mal:type area="MAL" list="false" name="Short"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="StringArgDef" shortFormPart="30" comment="Extended sub-type of ArgDef that provides additional attributes to support data validation for the string data type.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ArgDef"/>
        </mal:extends>
        <!-- Max Length -->
        <mal:field name="maxLength" canBeNull="false" comment="Maximum length of the string (characters).">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Regex -->
        <mal:field name="regex" canBeNull="false" comment="A “regular expression” or sequence of characters defining a character pattern that the string value must match.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="StatusArgDef" shortFormPart="31" comment="Extended sub-type of ArgDef that provides additional attributes to support data validation and interpretation for integer type arguments that are effectively enumerated Statuses.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ArgDef"/>
        </mal:extends>
        <!-- Allowed Values -->
        <mal:field name="allowedValues" canBeNull="false" comment="Set of allowed State definitions, comprising the enumerated value and an associated text label.">
          <mal:type area="MPS" list="true" name="StateDef"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Argument" shortFormPart="32" comment="The instance of an argument is an Argument, a set of which may be contained within the instance MO object of a planning event or planning activity or within a planning request. This comprises the name and value of the argument, corresponding to the set of arguments defined in the ArgDef. Argument values are represented as a MAL Attribute of appropriate data type. As there is no equivalent MAL::Attribute type for Position or Direction, values of these types are represented as a MAL::String containing a literal in the defined expression format for these types.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Argument Name -->
        <mal:field name="argName" canBeNull="false" comment="Name of the argument">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Count -->
        <mal:field name="count" canBeNull="true" comment="If argument is an array, count of the number of elements in the array.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Arg Value -->
        <mal:field name="argValue" canBeNull="false" comment="Argument value (or values if it is an array). MAL Attribute type must match the ArgType of the ArgDef. Position and Direction values are represented as a MAL::String.">
          <mal:type area="MAL" list="true" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ArgSpec" shortFormPart="33" comment="In the case of the planning activity, there is also an ArgSpec, a set of which may be contained within the Activity Details structure embedded within a planning request or parent planning activity definition. The ArgSpec defines how to derive the value of an Argument when instantiating it at run-time. The ArgSpec attribute is an Expression, the result of which must be a value matching the defined ArgType.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Argument Name -->
        <mal:field name="argName" canBeNull="false" comment="Name of the argument.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Count -->
        <mal:field name="count" canBeNull="true" comment="If argument is an array, count of the number of elements in the array.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Arg Spec -->
        <mal:field name="argSpec" canBeNull="false" comment="Expression that can be evaluated at run-time to provide argument value(s) of appropriate data type.">
          <mal:type area="MPS" list="false" name="Expression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ConstraintNode" shortFormPart="34" comment="Multiple Planning Constraints can be combined using a Constraint Node. The Constraint Node specifies the logical operation (AND or OR) to be used when combining a set of Constraints together. As the Constraint Node is itself defined as a sub-type of Constraint, it is possible to construct a tree of Constraint Nodes using different logical operators.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Operator -->
        <mal:field name="operator" canBeNull="false" comment="Enumeration specifying the logic for combining multiple Boolean conditions together. One of {AND, OR}.&#10;Default = AND.">
          <mal:type area="MPS" list="false" name="LogicOpEnum"/>
        </mal:field>
        <!-- Negate -->
        <mal:field name="negate" canBeNull="false" comment="Specifies whether the result of combining the Constraints is to be inverted (NOT function).&#10;Default = False.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Constraints -->
        <mal:field name="constraints" canBeNull="false" comment="The set of Constraints to be combined.">
          <mal:type area="MPS" list="true" name="Constraint"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="LogicOpEnum" shortFormPart="35" comment="">
        <mal:item nvalue="1" value="AND" comment="Logical AND."/>
        <mal:item nvalue="2" value="OR" comment="Logical OR."/>
      </mal:enumeration>

      <mal:composite name="Constraint" comment="">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="ConditionalConstraint" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Constraint"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="ConstraintExpression" shortFormPart="36" comment="The ConstraintExpression type allows for the use of such an expression language to define any type of constraint, providing communicating entities all have the capability to evaluate that expression language.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Constraint -->
        <mal:field name="constraint" canBeNull="false" comment="Potentially complex conditional expression that must evaluate to TRUE for the constraint to be met.">
          <mal:type area="MPS" list="false" name="BooleanExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="TemporalConstraint" comment="Temporal constraints impose a restriction on when a planning activity can appear in a plan. The abstract type TemporalConstraint identifies the planning activity that is subject to the constraint, while concrete sub-types allow the specification of three different types of temporal constraint: •	Time Constraint:  the time at which the planning activity is to be planned •	Time Window Constraint:  a time window within which the planning activity is to be planned •	Duration Constraint: a restriction on the duration of the planning activity in the plan.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the constrained planning activity.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="TimeConstraint" shortFormPart="37" comment="The point in the duration of the planning activity that is time constrained.&#10;0:  the start of the planning activity&#10;1:  the end of the planning activity">
        <mal:extends>
          <mal:type area="MPS" list="false" name="TemporalConstraint"/>
        </mal:extends>
        <!-- Time -->
        <mal:field name="time" canBeNull="false" comment="The Time at which the planning activity must be planned.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- Time Reference -->
        <mal:field name="timeRef" canBeNull="false" comment="The point in the duration of the planning activity that is time constrained. 0:  the start of the planning activity 1: the end of the planning activity.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="TimeWindowConstraint" shortFormPart="38" comment="The use of the Sliders to specify the start and end time references for the planning activity with respect to the specified TimeWindow[s] allows a range of overlap conditions to be expressed, for example:&#10;•	StartRef = Start[0] and EndRef = End[1] means that the planning activity must be fully contained within the specified TimeWindow.&#10;•	StartRef = Start[0] and EndRef = Start[0] means that the planning activity must start within the specified TimeWindow, but can continue beyond the end of the TimeWindow.&#10;•	StartRef = End[1] and EndRef = Start[0] means that the planning activity can overlap both the start and end of the TimeWindow.&#10;Multiple TimeWindows can be specified.  This indicates that the planning activity may be placed within any of the specified TimeWindows, not that it should be placed multiple times.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="TemporalConstraint"/>
        </mal:extends>
        <!-- Start Reference -->
        <mal:field name="startRef" canBeNull="false" comment="The point in the duration of the Activity that is constrained to be after the start time of the Time Window. Although typically the start of the Activity (0), this can be any point up to the end of the Activity (1).">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- End Reference -->
        <mal:field name="endRef" canBeNull="false" comment="The point in the duration of the Activity that is constrained to be before the end time of the Time Window. Although typically the end of the Activity (1), this can be any point up to the start of the Activity (0).">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Time Windows -->
        <mal:field name="timeWindows" canBeNull="false" comment="The [set of] TimeWindows within which the Activity must be placed on the Plan.">
          <mal:type area="MPS" list="true" name="TimeWindow"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="DurationConstraint" shortFormPart="39" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="TemporalConstraint"/>
        </mal:extends>
        <!-- Min Duration -->
        <mal:field name="minDuration" canBeNull="false" comment="Specifies the minimum duration of the planning activity.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Max Duration -->
        <mal:field name="maxDuration" canBeNull="false" comment="Specifies the maximum duration of the planning activity.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="SequentialConstraint" shortFormPart="40" comment="Sequential constraints impose a restriction on the order of planning activities in a plan with respect to both other planning activities and planning events.&#10;Two objects are identified:  the Predecessor which must be followed in the plan by the Successor. While either the Predecessor or Successor may be a planning event, it is not possible to specify a sequential constraint between two planning events: one or both must be a planning activity.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Predecessor -->
        <mal:field name="predecessor" canBeNull="false" comment="Identifies the planning activity or planning event that must occur first on the plan.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Successor -->
        <mal:field name="successor" canBeNull="false" comment="Identifies the planning activity or planning event that must follow the predecessor on the plan.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Predecessor Reference -->
        <mal:field name="predecessorRef" canBeNull="false" comment="Point on the Predecessor that must be followed by the Successor.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Successor Reference -->
        <mal:field name="successorRef" canBeNull="false" comment="Point on the Successor that must follow the Predecessor.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Min Offset -->
        <mal:field name="minOffset" canBeNull="false" comment="Minimum period between the specified points on the Predecessor and Successor.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Max Offset -->
        <mal:field name="maxOffset" canBeNull="false" comment="Maximum period between the specified points on the Predecessor and Successor.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ExclusionConstraint" shortFormPart="41" comment="An Exclusion constraint specifies a set of 2 or more planning activities or planning events that cannot occur concurrently in a Plan. As only planning activities can be excluded, at least one of the set must be a planning activity. Excluded objects are specified by definition [class] rather than instance, the exclusion applying to all instances of the class. Exclusion implies no overlap between the excluded items.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Class Reference -->
        <mal:field name="classRef" canBeNull="false" comment="Specifies the definition (class) of excluded planning activities and planning events.">
          <mal:type area="MAL" list="true" name="Identifier"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ArgumentConstraint" shortFormPart="42" comment="An Argument Constraint may be associated with a planning activity to restrict when it can be planned, based on the value of an argument of the planning activity itself or a related planning event.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Argument Constraint applies.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Object Reference -->
        <mal:field name="objectRef" canBeNull="false" comment="Identifies the Object (planning activity or planning event) whose argument is to be referenced.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Argument Name -->
        <mal:field name="argName" canBeNull="false" comment="Identifies the specific argument of the referenced Object whose value is to be compared.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Comparator -->
        <mal:field name="comparator" canBeNull="false" comment="MPS Comparison Operator, which may be one of: =, !=, &gt;, &gt;=, &lt;, &lt;=, contains, icontains.&#10;The contains operator only applies to Strings and may be case sensitive or insensitive.">
          <mal:type area="MPS" list="false" name="ExpressionOperatorEnum" />
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Value (of same type as the referenced Argument) to be compared against.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="ExpressionOperatorEnum" shortFormPart="43" comment="">
        <mal:item nvalue="1" value="EQUAL" comment="="/>
        <mal:item nvalue="2" value="DIFFER" comment="!="/>
        <mal:item nvalue="3" value="GREATER" comment="&gt;"/>
        <mal:item nvalue="4" value="GREATER_OR_EQUAL" comment="&gt;="/>
        <mal:item nvalue="5" value="LESS" comment="&lt;"/>
        <mal:item nvalue="6" value="LESS_OR_EQUAL" comment="&lt;="/>
        <mal:item nvalue="7" value="CONTAINS" comment="Case sensitive containment (Strings only)."/>
        <mal:item nvalue="8" value="ICONTAINS" comment="Case insensitive containment (Strings only)."/>
      </mal:enumeration>

      <mal:composite name="ResourceConstraint" shortFormPart="44" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Resource Constraint applies.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Resource Reference -->
        <mal:field name="resourceRef" canBeNull="false" comment="Identifies the planning resource that is constrained for the duration of the planning activity.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Comparator -->
        <mal:field name="comparator" canBeNull="false" comment="MPS Comparison Operator, which may be one of: =, !=, &gt;, &gt;=, &lt;, &lt;=, contains, icontains.&#10;The contains operator only applies to Strings and may be case sensitive or insensitive.">
          <mal:type area="MPS" list="false" name="ExpressionOperatorEnum" />
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Value (of same type as the referenced Resource) to be compared against.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="ComplexResourceConstraint" shortFormPart="45" comment="In the [simple] Resource Constraint, the value of the referenced planning resource is constrained against a single value for the entire duration of the referenced planning activity.&#10;With the Complex Resource Constraint, the period over which the constraint applies can be customised relative to the referenced planning activity; and the value against which the referenced planning resource is constrained can be specified as a Relative Resource Profile which evolves over time.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Resource Constraint applies.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Resource Reference -->
        <mal:field name="resourceRef" canBeNull="false" comment="Identifies the planning resource that is constrained for the duration of the planning activity.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Comparator -->
        <mal:field name="comparator" canBeNull="false" comment="MPS Comparison Operator, which may be one of: =, !=, &gt;, &gt;=, &lt;, &lt;=, contains, icontains.&#10;The contains operator only applies to Strings and may be case sensitive or insensitive.">
          <mal:type area="MPS" list="false" name="ExpressionOperatorEnum" />
        </mal:field>
        <!-- Start Reference -->
        <mal:field name="startRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the start of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- End Reference -->
        <mal:field name="endRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the end of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Start Offset -->
        <mal:field name="startOffset" canBeNull="false" comment="Offset from StartRef that specifies the start of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End Offset -->
        <mal:field name="endOffset" canBeNull="false" comment="Offset from EndRef that specifies the end of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Resource Profile specifying an evolving value over time against which the value of the planning resource is to be compared.">
          <mal:type area="MPS" list="false" name="RelativeResourceProfile"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="FunctionConstraint" shortFormPart="46" comment="Function Constraints make use of an external function to determine whether or not a constraint is satisfied. Available functions must be pre-defined to allow them to be referenced in a Function Constraint.&#10;As for Complex Resource Constraints, the period over which the Function Constraint applies is specified relative to the referenced planning activity.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Function Constraint applies.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Start Reference -->
        <mal:field name="startRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the start of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- End Reference -->
        <mal:field name="endRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the end of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Start Offset -->
        <mal:field name="startOffset" canBeNull="false" comment="Offset from StartRef that specifies the start of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End Offset -->
        <mal:field name="endOffset" canBeNull="false" comment="Offset from EndRef that specifies the end of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Function Details -->
        <mal:field name="function" canBeNull="false" comment="Specifies the Function to be applied and its set of input arguments.">
          <mal:type area="MPS" list="false" name="FunctionDetails"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="GeometricConstraint" comment="Geometric Constraints impose a restriction on a planning activity appearing in a plan, based on the position or pointing direction of a physical object, such as a spacecraft or instrument.&#10;The abstract type Geometric Constraint identifies the planning activity that is subject to the constraint, and the period over which the constraint is applicable, relative to the start and end of that planning activity. Concrete sub-types allow the specification of different types of geometric constraint:&#10;•	Position Constraint: expressed in terms of a specified Position and a tolerance. Different sub-types support the specification of Position using different coordinate systems.&#10;•	Pointing Constraint: expressed in terms of the pointing templates defined for use within CCSDS Navigation data format standards.&#10;•	Revolution Constraint: expressed in terms of revolution angle and a tolerance.&#10;•	Distance Constraint: expressed in terms of the distance between Observer and Target objects.&#10;•	Angle Constraint: expressed in terms of the angle subtended by three objects.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="ConditionalConstraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Geometric Constraint applies.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Start Reference -->
        <mal:field name="startRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the start of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- End Reference -->
        <mal:field name="endRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the end of the constraint period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Start Offset -->
        <mal:field name="startOffset" canBeNull="false" comment="Offset from StartRef that specifies the start of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End Offset -->
        <mal:field name="endOffset" canBeNull="false" comment="Offset from EndRef that specifies the end of the constraint period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PositionConstraint" comment="Position constraints are expressed in terms of a specified Position and a tolerance. Concrete sub-types are defined to support positions expressed using different co-ordinate systems.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="GeneralPositionConstraint" shortFormPart="47" comment="A concrete sub-type of Position Constraint that can be used to specify the constraint in terms of a tolerance sphere around the specified position, expressed as a distance.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionConstraint"/>
        </mal:extends>
        <!-- Position -->
        <mal:field name="position" canBeNull="false" comment="Specifies the required position expressed as cartesian co-ordinates, orbital co-ordinates, or a named target.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="Specifies the maximum distance from the required position that satisfies the constraint, effectively defining a sphere around the required position.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. The tolerance unit name, as defined in [PRM] annex D.&#10;Default = “km”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="OrbitalPositionConstraint" shortFormPart="48" comment="A concrete sub-type of Position Constraint that can be used to specify a range of orbital positions, expressed in terms of orbit number and orbit angle.  This is particularly relevant for earth observation satellites with a repetitive ground track and on-board position based scheduler.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionConstraint"/>
        </mal:extends>
        <!-- Orbit Number -->
        <mal:field name="orbitNumber" canBeNull="false" comment="Orbit Number. Depending on the RelativeOrbit flag, the Orbit Number may be absolute (since start of mission) or relative (to the orbital repeat cycle).">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Relative Orbit -->
        <mal:field name="relativeOrbit" canBeNull="false" comment="Flag indicating if the Orbit Number is absolute or relative to the orbital repeat cycle.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Orbit Angle -->
        <mal:field name="orbitAngle" canBeNull="false" comment="Specifies the required Angle within orbit.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="Specifies a tolerance in the required Angle within orbit, effectively defining a range of orbit angles:&#10;orbitAngle±tolerance.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. The angular unit name, as defined in [PRM] annex D.&#10;Default = “deg”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PointingConstraint" shortFormPart="49" comment="Pointing Constraints impose a restriction on a planning activity appearing in a plan, based on the pointing direction of a physical object, such as a spacecraft or instrument.&#10;As with the Direction data types, Pointing Constraints are consistent with the pointing templates defined for use within CCSDS Navigation data format standards, and specifically the Pointing Request Message (PRM) [PRM]. PointingConstraint is a concrete sub-type of Geometric Constraint that includes attributes common to all pointing templates. The pointing template itself is then identified as an attribute and any additional arguments applicable to the template are provided as a list of name-value pairs.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="GeometricConstraint"/>
        </mal:extends>
        <!-- Pointing Frame -->
        <mal:field name="pointingFrame" canBeNull="false" comment="Optional. Frame to which the Pointing Constraint applies. Default frame is the spacecraft frame or any other mission specific default frame.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Boresight -->
        <mal:field name="boresight" canBeNull="false" comment="Direction in any spacecraft frame.">
          <mal:type area="MPS" list="false" name="Direction"/>
        </mal:field>
        <!-- Boresight Margin -->
        <mal:field name="boresightMargin" canBeNull="false" comment="Defines an optional cone region around the boresight, allowing a margin for application of the pointing constraint.&#10;Default = 0.0.">
          <mal:type area="MPS" list="false" name="Angle"/>
        </mal:field>
        <!-- Phase Angle Margin -->
        <mal:field name="phaseAngleMargin" canBeNull="false" comment="Defines an optional rotation around the boresight, w.r.t. the default phase angle, allowing a margin for application of the pointing constraint.">
          <mal:type area="MPS" list="false" name="Angle"/>
        </mal:field>
        <!-- Unconstrained Phase Angle -->
        <mal:field name="unconstrainedPhaseAngle" canBeNull="false" comment="If TRUE no constraint will apply to the phaseAngle. The phaseAngleMargin attribute will be ignored in this case.&#10;Default = FALSE.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Pointing Template -->
        <mal:field name="pointingTemplate" canBeNull="false" comment="Corresponds to one of those defined in the NAV Pointing Request Message standard. A MAL::String is used to represent the pointing template type to allow for future extension.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
        <!-- Pointing Arguments -->
        <mal:field name="pointingArguments" canBeNull="true" comment="The argument list is consistent with the referenced template by name. Physical Values are represented as a pair of arguments containing the value and units respectively. Position and Direction type arguments are represented as strings containing the literal value.">
          <mal:type area="MAL" list="true" name="NamedValue"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RevolutionConstraint" shortFormPart="50" comment="Specifies a range of revolution angles for a rotating spacecraft.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="GeometricConstraint"/>
        </mal:extends>
        <!-- Revolution Angle -->
        <mal:field name="revolutionAngle" canBeNull="false" comment="Angle of revolution.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="Tolerance in the angle of revolution.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. The angular unit name, as defined in [PRM] annex D. Optional. The angular unit name, as defined in [PRM] annex D.&#10;Default = “deg”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="DistanceConstraint" shortFormPart="51" comment="Specifies a range of distances between two physical objects (the Observer and the Target).">
        <mal:extends>
          <mal:type area="MPS" list="false" name="GeometricConstraint"/>
        </mal:extends>
        <!-- Observer -->
        <mal:field name="observer" canBeNull="false" comment="Position of the Observer [Object1].">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Target -->
        <mal:field name="target" canBeNull="false" comment="Position of the Target [Object2].">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Min Distance -->
        <mal:field name="minDistance" canBeNull="false" comment="Minimum Distance between Observer and Target.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Max Distance -->
        <mal:field name="maxDistance" canBeNull="false" comment="Maximum Distance between Observer and Target.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. The distance unit name, as defined in [PRM] annex D.&#10;Default = “km”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="AngleConstraint" shortFormPart="52" comment="Specifies a range of values for the angle subtended between three physical objects.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="GeometricConstraint"/>
        </mal:extends>
        <!-- Object 1 -->
        <mal:field name="object1" canBeNull="false" comment="Position of Object1.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Object 2 -->
        <mal:field name="object2" canBeNull="false" comment="Position of Object2.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Object 3 -->
        <mal:field name="object3" canBeNull="false" comment="Position of Object3.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Min Angle -->
        <mal:field name="minAngle" canBeNull="false" comment="Minimum Angle between Observer and Target.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Max Angle -->
        <mal:field name="maxAngle" canBeNull="false" comment="Maximum Angle between Observer and Target.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="Optional. The angular unit name, as defined in [PRM] annex D.&#10;Default = “deg”.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Effect" comment="Effects are an optional element of the MPS information model that may be used in conjunction with planning resources. They specify the impact that executing a planning activity will have on planning resources. These may be used to predict the evolution of the values of planning resources over the period of a plan. This in turn enables the verification that sufficient resource is available for execution of the plan and that all explicit resource constraints are satisfied.&#10;The abstract type Effect identifies the planning activity that causes the effect and the planning resource to which the effect is applied. The planning activity may be identified by ActivityDefinition, in which case it applies to all instances of that definition, or by a specific ActivityInstance. There are two concrete sub-types:&#10;•	Simple Effect&#10;•	Complex Effect">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Constraint"/>
        </mal:extends>
        <!-- Activity Reference -->
        <mal:field name="activityRef" canBeNull="false" comment="Identifies the planning activity for which the Resource Constraint applies. May be either an ActivityDefinition or an ActivityInstance.">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Resource Reference -->
        <mal:field name="resourceRef" canBeNull="false" comment="Identifies the planning resource that is constrained for the duration of the planning activity.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="SimpleEffect" shortFormPart="53" comment="A Simple Effect applies the defined operation on the specified planning resource at the time relative to the planning activity defined by TimeRef+TimeOffset.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Effect"/>
        </mal:extends>
        <!-- Time Reference -->
        <mal:field name="timeRef" canBeNull="false" comment="The point in the duration of the planning activity to which the time of the Effect is relative.&#10;0:  the start of the planning activity&#10;1:  the end of the planning activity">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Time Offset -->
        <mal:field name="timeOffset" canBeNull="false" comment="Offset from TimeRef that specifies the time at which the Effect is to be applied.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Operator -->
        <mal:field name="operator" canBeNull="false" comment="Operation to be performed on the planning resource. One of: SET, INCREMENT, DECREMENT.&#10;Increment and Decrement are only applicable to numeric data types.">
          <mal:type area="MPS" list="false" name="EffectOperationEnum"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="The value that the planning resource is to be set to if the EffectOperation is SET; or to be incremented/decremented by if it is INCREMENT or DECREMENT.">
          <mal:type area="MAL" list="false" name="Attribute"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="EffectOperationEnum" shortFormPart="54" comment="">
        <mal:item nvalue="1" value="SET" comment="Set to specified value."/>
        <mal:item nvalue="2" value="INCREMENT" comment="Increment by specified value."/>
        <mal:item nvalue="3" value="DECREMENT" comment="Decrement by specified value."/>
      </mal:enumeration>

      <mal:composite name="ComplexEffect" shortFormPart="55" comment="In the Simple Effect, the value of the impacted planning resource is set to the specified value at a single point in time.&#10;With the Complex Effect, the value of the impacted planning resource can be evolved over a specified time period in accordance with a defined Relative Resource Profile.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Effect"/>
        </mal:extends>
        <!-- Start Reference -->
        <mal:field name="startRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the start of the effect period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- End Reference -->
        <mal:field name="endRef" canBeNull="false" comment="Identifies the point in the duration of the referenced planning activity to which the end of the effect period relates.">
          <mal:type area="MPS" list="false" name="Slider"/>
        </mal:field>
        <!-- Start Offset -->
        <mal:field name="startOffset" canBeNull="false" comment="Offset from StartRef that specifies the start of the effect period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- End Offset -->
        <mal:field name="endOffset" canBeNull="false" comment="Offset from EndRef that specifies the end of the effect period.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Operator -->
        <mal:field name="operator" canBeNull="false" comment="Operation to be performed on the planning resource. One of: SET, INCREMENT, DECREMENT.&#10;Increment and Decrement are only applicable to numeric data types.">
          <mal:type area="MPS" list="false" name="EffectOperationEnum"/>
        </mal:field>
        <!-- Value -->
        <mal:field name="value" canBeNull="false" comment="Resource Profile specifying an evolving value to which the value of the planning resource is to be set.">
          <mal:type area="MPS" list="false" name="RelativeResourceProfile"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Trigger" comment="All sub-classes of Trigger include the time at which they are predicted to occur (in advance of execution); and, where applicable, the time at which they actually occurred (post execution).">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Time -->
        <mal:field name="time" canBeNull="false" comment="Predicted or Actual Time of Trigger. The predicted Time may evolve during the planning process up to the time of execution. The actual Time is only available post execution, and hence can only be provided by a Plan Execution function.">
          <mal:type area="MAL" list="false" name="Time"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="TimeTrigger" shortFormPart="56" comment="Sub-type of Trigger based on Time. The Trigger Time is the specified constraint, and will usually match the predicted Time on the base class during the planning process, but the actual Time could still be slightly different post-execution.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:extends>
        <!-- Trigger Time -->
        <mal:field name="triggerTime" canBeNull="false" comment="Planned Time of Trigger.">
          <mal:type area="MAL" list="false" name="Time"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PositionTrigger" comment="Optional sub-type of Trigger based on Position. Separate concrete sub-types provide for the general case and specification of the trigger based on orbital position.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="GeneralPositionTrigger" shortFormPart="57" comment="Sub-type of Position Trigger for the general case of a specified Position.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionTrigger"/>
        </mal:extends>
        <!-- Trigger Position -->
        <mal:field name="triggerPosition" canBeNull="false" comment="Planned Position of Trigger.">
          <mal:type area="MPS" list="false" name="Position"/>
        </mal:field>
        <!-- Distance Margin -->
        <mal:field name="distanceMargin" canBeNull="false" comment="Defines a sphere around the trigger position within which a position is considered to meet the trigger condition.">
          <mal:type area="MPS" list="false" name="Distance"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="OrbitalPositionTrigger" shortFormPart="58" comment="Sub-type of Position Trigger based on orbital repeat cycle.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionTrigger"/>
        </mal:extends>
        <!-- Orbit Number -->
        <mal:field name="orbitNumber" canBeNull="false" comment="Orbit Number. Depending on the RelativeOrbit flag, the Orbit Number may be absolute (since start of mission) or relative (to the orbital repeat cycle).">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Relative Orbit -->
        <mal:field name="relativeOrbit" canBeNull="false" comment="Flag indicating if the Orbit Number is absolute or relative to the orbital repeat cycle.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Orbit Angle -->
        <mal:field name="orbitAngle" canBeNull="false" comment="Angle within Orbit.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PointingTrigger" comment="Sub-type of Trigger based on Pointing. Separate concrete sub-types provide for the general case and specification of the trigger based on revolution angle.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="GeneralPointingTrigger" shortFormPart="59" comment="Sub-type of Pointing Trigger for the general case of a specified Direction.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PointingTrigger"/>
        </mal:extends>
        <!-- Trigger Direction -->
        <mal:field name="triggerDirection" canBeNull="false" comment="Planned Direction of Trigger.">
          <mal:type area="MPS" list="false" name="Direction"/>
        </mal:field>
        <!-- Angle Margin -->
        <mal:field name="angleMargin" canBeNull="false" comment="Defines a circle around the trigger direction within which a direction is considered to meet the trigger condition.">
          <mal:type area="MPS" list="false" name="Angle"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RevolutionTrigger" shortFormPart="60" comment="Sub-type of Pointing Trigger based on the angle of revolution of a rotating spacecraft.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PointingTrigger"/>
        </mal:extends>
        <!-- Revolution Angle -->
        <mal:field name="revolutionAngle" canBeNull="false" comment="Angle within Revolution.">
          <mal:type area="MAL" list="false" name="Double"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="EventTrigger" shortFormPart="61" comment="Sub-type of Trigger based on Planning Event.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Trigger"/>
        </mal:extends>
        <!-- Trigger Event -->
        <mal:field name="triggerEvent" canBeNull="false" comment="Reference to a Planning Event Instance.">
          <mal:type area="MAL" list="false" name="Identifier"/>
        </mal:field>
        <!-- Time Offset -->
        <mal:field name="timeOffset" canBeNull="false" comment="Time offset from the Planning Event Instance.">
          <mal:type area="MAL" list="false" name="Duration"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="Repetition" comment="A Repetition is used to specify the repeated instantiation of a [set of] Planning Activities. Multiple sub-types of Repetition are defined to support the specification of repeat cycles by different criteria. It can be used in the context of a Planning Request to specify a standing order for repeated execution of the [set of] Planning Activities.">
        <mal:extends>
          <mal:type area="MAL" list="false" name="Composite"/>
        </mal:extends>
        <!-- Count -->
        <mal:field name="count" canBeNull="true" comment="Maximum number of repeat cycles/instances [optional].&#10;If not specified there is no limit to the number of repetitions.">
          <mal:type area="MAL" list="false" name="Integer"/>
        </mal:field>
        <!-- Time Window -->
        <mal:field name="timeWindow" canBeNull="true" comment="Time period over which the repetition is applicable [optional].&#10;If not specified repetition continues indefinitely.">
          <mal:type area="MPS" list="false" name="TimeWindow"/>
        </mal:field>
        <!-- Separation Type -->
        <mal:field name="separationType" canBeNull="false" comment="Specifies whether the repetition interval is Relative to the previous occurrence, or Absolute for all occurrences.">
          <mal:type area="MPS" list="false" name="SeparationTypeEnum"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="SeparationTypeEnum" shortFormPart="62" comment="">
        <mal:item nvalue="1" value="RELATIVE" comment="Tolerance on separation is only considered between any two occurrences."/>
        <mal:item nvalue="2" value="ABSOLUTE" comment="Tolerance on separation applies to a multiple of the separation from the initial occurrence."/>
      </mal:enumeration>

      <mal:composite name="TemporalRepetition" shortFormPart="63" comment="A sub-type of Repetition based on Time.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:extends>
        <!-- Initial Time -->
        <mal:field name="initialTime" canBeNull="false" comment="Nominal time of first occurrence.">
          <mal:type area="MPS" list="false" name="TimeExpression"/>
        </mal:field>
        <!-- Separation -->
        <mal:field name="separation" canBeNull="false" comment="The required time interval between occurrences.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required time between occurrences, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="DurationExpression"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PositionRepetition" comment="A sub-type of Repetition based on Position. Separate concrete sub-types provide for repetitions based on generic position and orbital position.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="GeneralPositionRepetition" shortFormPart="64" comment="">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionRepetition"/>
        </mal:extends>
        <!-- Initial Position -->
        <mal:field name="initialPosition" canBeNull="false" comment="Nominal position of first occurrence.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Repetition Direction -->
        <mal:field name="repetitionDirection" canBeNull="false" comment="Direction of repetition.">
          <mal:type area="MPS" list="false" name="DirectionExpression"/>
        </mal:field>
        <!-- Separation -->
        <mal:field name="separation" canBeNull="false" comment="The required Distance between occurrences.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required distance between occurrences, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="The units used for Separation and Tolerance.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="OrbitalRepetition" shortFormPart="65" comment="A sub-type of Repetition based on the Orbital cycle.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PositionRepetition"/>
        </mal:extends>
        <!-- Orbit Number -->
        <mal:field name="orbitNumber" canBeNull="false" comment="Orbit number for the first occurrence. Depending on the RelativeOrbit flag, the Orbit Number may be absolute (since start of mission) or relative (to the orbital repeat cycle).">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Orbit Angle -->
        <mal:field name="orbitAngle" canBeNull="false" comment="The required position of the first occurrence within the orbit expressed as an angle.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Relative Orbit -->
        <mal:field name="relativeOrbit" canBeNull="false" comment="Flag indicating if the Orbit Number is absolute or relative to the orbital repeat cycle.">
          <mal:type area="MAL" list="false" name="Boolean"/>
        </mal:field>
        <!-- Orbit Separation -->
        <mal:field name="orbitSeparation" canBeNull="false" comment="The required number of orbits separation between occurrences. If OrbitNumber is Relative and the required repetition is once per repeat cycle, this is the number of orbits in the repeat cycle, but the value 0 may also be used.">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Angular Separation -->
        <mal:field name="angularSeparation" canBeNull="false" comment="The required angular separation between occurrences. This allows for multiple repetitions within an orbit. The value 0 indicates only one occurrence within the orbit.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required orbital angle.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="The units used for OrbitAngle, AngularSeparation and Tolerance.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="PointingRepetition" comment="A sub-type of Repetition based on Pointing. Concrete sub-types provide for repetition based on direction and revolutions.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:extends>
      </mal:composite>

      <mal:composite name="DirectionRepetition" shortFormPart="66" comment="A sub-type of Repetition based on direction, which supports the specification of astronomical surveys.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PointingRepetition"/>
        </mal:extends>
        <!-- Initial Direction -->
        <mal:field name="initialDirection" canBeNull="false" comment="Nominal direction of first occurrence.">
          <mal:type area="MPS" list="false" name="DirectionExpression"/>
        </mal:field>
        <!-- Repetition Angle -->
        <mal:field name="repetitionDirection" canBeNull="false" comment="Specifies the direction of repetition as a rotational angle around the initialDirection.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Separation -->
        <mal:field name="separation" canBeNull="false" comment="The required angle between occurrences.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required angle between occurrences, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="The units used for Separation and Tolerance.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="RevolutionRepetition" shortFormPart="67" comment="A sub-type of Repetition based on the Revolutions of a rotating spacecraft or instrument.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="PointingRepetition"/>
        </mal:extends>
        <!-- Revolutions Separation -->
        <mal:field name="revsSeparation" canBeNull="false" comment="The required number of revolutions between occurrences.">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Revolutions Tolerance -->
        <mal:field name="revsTolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required number of revolutions between occurrences, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Revolution Angle -->
        <mal:field name="revAngle" canBeNull="true" comment="Specifies the angle within a revolution.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="The units used for RevAngle.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:composite name="GeometricRepetition" shortFormPart="68" comment="A sub-type of Repetition based on distance or angle from an initial Position.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:extends>
        <!-- Initial Position -->
        <mal:field name="initialPosition" canBeNull="false" comment="Nominal position of first occurrence.">
          <mal:type area="MPS" list="false" name="PositionExpression"/>
        </mal:field>
        <!-- Measure -->
        <mal:field name="measure" canBeNull="false" comment="May be Distance or Angle.">
          <mal:type area="MPS" list="false" name="GeometricMeasureEnum"/>
        </mal:field>
        <!-- Separation -->
        <mal:field name="separation" canBeNull="false" comment="The required Distance or Angle between occurrences.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the required distance or angle between occurrences, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="RealExpression"/>
        </mal:field>
        <!-- Units -->
        <mal:field name="units" canBeNull="true" comment="The units used for Separation and Tolerance.">
          <mal:type area="MAL" list="false" name="String"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="GeometricMeasureEnum" shortFormPart="69" comment="">
        <mal:item nvalue="1" value="DISTANCE" comment="Separation is a Distance."/>
        <mal:item nvalue="2" value="ANGLE" comment="Separation is an Angle."/>
      </mal:enumeration>

      <mal:composite name="EventRepetition" shortFormPart="70" comment="A sub-type of Repetition based on Planning Events.">
        <mal:extends>
          <mal:type area="MPS" list="false" name="Repetition"/>
        </mal:extends>
        <!-- Event Ref -->
        <mal:field name="eventRef" canBeNull="false" comment="Reference to a Planning Event Definition (type of Event).">
          <mal:type area="MPS" list="false" name="ObjectExpression"/>
        </mal:field>
        <!-- Separation -->
        <mal:field name="separation" canBeNull="false" comment="Number of occurrences of the Planning Event required between occurrences of the Planning Activity.">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
        <!-- Tolerance -->
        <mal:field name="tolerance" canBeNull="false" comment="The allowed tolerance (+/-) in the number of occurrences of the Planning Event between occurrences of the Planning Activity, the interpretation of which is dependent on the SeparationType.">
          <mal:type area="MPS" list="false" name="IntegerExpression"/>
        </mal:field>
      </mal:composite>

      <mal:enumeration name="ErrorCodesEnum" shortFormPart="71" comment="Standard secondary error codes for the INVALID error.">
        <mal:item nvalue="1" value="UNKNOWN" comment="Referenced MO Object is not available to the service provider."/>
        <mal:item nvalue="2" value="UNDEFINED" comment="Undefined value for enumeration field."/>
        <mal:item nvalue="3" value="OUT_OF_RANGE" comment="A numeric value is outside the supported range."/>
        <mal:item nvalue="4" value="UNRECOGNIZED" comment="Value of type MAL::Identifier or MAL::String (referencing a named item) does not correspond to a known item."/>
        <mal:item nvalue="5" value="BAD_TIME" comment="A date-time value is outside the supported time period."/>
        <mal:item nvalue="6" value="BAD_POSITION" comment="A position value is outside the supported position range."/>
        <mal:item nvalue="7" value="BAD_DIRECTION" comment="A direction value is outside the supported direction range."/>
        <mal:item nvalue="8" value="INCONSISTENT" comment="A value is inconsistent with that of another field within the message. This indicates violation of a constraint rule."/>
      </mal:enumeration>
    </mal:dataTypes>

    <mal:errors>
      <mal:error name="INVALID" number="0" comment="One or more fields in the message contain invalid values.&#10;ExtraInfo comprises a list of structures, each identifying an invalid field, comprising:&#10;1.	A String giving a dot separated nested index for the field, to allow for fields that are themselves a structure, of the form “3.2” meaning the 2nd field of the composite structure that is the 3rd field of the message.&#10;2.	A UInteger giving a secondary error code that details the reason for invalidity."/>
      <mal:error name="UPDATE_FAILED" number="1" comment="The updateRequest operation failed to update the referenced RequestInstance.&#10;ExtraInfo provides additional information on the reason for failure as a free format string."/>
    </mal:errors>

  </mal:area>
</mal:specification>
